
RTC_3231-display.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006f0  00800100  00001034  000010c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001034  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  008007f0  008007f0  000017b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  00001828  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003265  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e07  00000000  00000000  00004cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000296d  00000000  00000000  00005b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b00  00000000  00000000  00008474  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001266a  00000000  00000000  00008f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003c5e  00000000  00000000  0001b5de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  0001f23c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000011c4  00000000  00000000  0001f44c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
       2:	00 00       	nop
       4:	4c c0       	rjmp	.+152    	; 0x9e <__bad_interrupt>
       6:	00 00       	nop
       8:	4a c0       	rjmp	.+148    	; 0x9e <__bad_interrupt>
       a:	00 00       	nop
       c:	48 c0       	rjmp	.+144    	; 0x9e <__bad_interrupt>
       e:	00 00       	nop
      10:	46 c0       	rjmp	.+140    	; 0x9e <__bad_interrupt>
      12:	00 00       	nop
      14:	44 c0       	rjmp	.+136    	; 0x9e <__bad_interrupt>
      16:	00 00       	nop
      18:	42 c0       	rjmp	.+132    	; 0x9e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	40 c0       	rjmp	.+128    	; 0x9e <__bad_interrupt>
      1e:	00 00       	nop
      20:	3e c0       	rjmp	.+124    	; 0x9e <__bad_interrupt>
      22:	00 00       	nop
      24:	3c c0       	rjmp	.+120    	; 0x9e <__bad_interrupt>
      26:	00 00       	nop
      28:	3a c0       	rjmp	.+116    	; 0x9e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	38 c0       	rjmp	.+112    	; 0x9e <__bad_interrupt>
      2e:	00 00       	nop
      30:	36 c0       	rjmp	.+108    	; 0x9e <__bad_interrupt>
      32:	00 00       	nop
      34:	34 c0       	rjmp	.+104    	; 0x9e <__bad_interrupt>
      36:	00 00       	nop
      38:	32 c0       	rjmp	.+100    	; 0x9e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	30 c0       	rjmp	.+96     	; 0x9e <__bad_interrupt>
      3e:	00 00       	nop
      40:	2e c0       	rjmp	.+92     	; 0x9e <__bad_interrupt>
      42:	00 00       	nop
      44:	2c c0       	rjmp	.+88     	; 0x9e <__bad_interrupt>
      46:	00 00       	nop
      48:	2a c0       	rjmp	.+84     	; 0x9e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	28 c0       	rjmp	.+80     	; 0x9e <__bad_interrupt>
      4e:	00 00       	nop
      50:	26 c0       	rjmp	.+76     	; 0x9e <__bad_interrupt>
      52:	00 00       	nop
      54:	24 c0       	rjmp	.+72     	; 0x9e <__bad_interrupt>
      56:	00 00       	nop
      58:	22 c0       	rjmp	.+68     	; 0x9e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	20 c0       	rjmp	.+64     	; 0x9e <__bad_interrupt>
      5e:	00 00       	nop
      60:	1e c0       	rjmp	.+60     	; 0x9e <__bad_interrupt>
      62:	00 00       	nop
      64:	1c c0       	rjmp	.+56     	; 0x9e <__bad_interrupt>
	...

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	17 e0       	ldi	r17, 0x07	; 7
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 e3       	ldi	r30, 0x34	; 52
      7c:	f0 e1       	ldi	r31, 0x10	; 16
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 3f       	cpi	r26, 0xF0	; 240
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	27 e0       	ldi	r18, 0x07	; 7
      8c:	a0 ef       	ldi	r26, 0xF0	; 240
      8e:	b7 e0       	ldi	r27, 0x07	; 7
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	af 3f       	cpi	r26, 0xFF	; 255
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	aa d6       	rcall	.+3412   	; 0xdf0 <main>
      9c:	c9 c7       	rjmp	.+3986   	; 0x1030 <_exit>

0000009e <__bad_interrupt>:
      9e:	b0 cf       	rjmp	.-160    	; 0x0 <__vectors>

000000a0 <a_ds3231_iic_write>:
        
        return 1;                                                                            /* return error */
    }
    
    return 0;                                                                                /* success return 0 */
}
      a0:	cf 93       	push	r28
      a2:	df 93       	push	r29
      a4:	1f 92       	push	r1
      a6:	cd b7       	in	r28, 0x3d	; 61
      a8:	de b7       	in	r29, 0x3e	; 62
      aa:	49 83       	std	Y+1, r20	; 0x01
      ac:	dc 01       	movw	r26, r24
      ae:	14 96       	adiw	r26, 0x04	; 4
      b0:	ed 91       	ld	r30, X+
      b2:	fc 91       	ld	r31, X
      b4:	15 97       	sbiw	r26, 0x05	; 5
      b6:	21 e0       	ldi	r18, 0x01	; 1
      b8:	30 e0       	ldi	r19, 0x00	; 0
      ba:	ae 01       	movw	r20, r28
      bc:	4f 5f       	subi	r20, 0xFF	; 255
      be:	5f 4f       	sbci	r21, 0xFF	; 255
      c0:	88 e6       	ldi	r24, 0x68	; 104
      c2:	09 95       	icall
      c4:	91 e0       	ldi	r25, 0x01	; 1
      c6:	81 11       	cpse	r24, r1
      c8:	01 c0       	rjmp	.+2      	; 0xcc <a_ds3231_iic_write+0x2c>
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	89 2f       	mov	r24, r25
      ce:	0f 90       	pop	r0
      d0:	df 91       	pop	r29
      d2:	cf 91       	pop	r28
      d4:	08 95       	ret

000000d6 <a_ds3231_iic_multiple_read>:
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	dc 01       	movw	r26, r24
      da:	16 96       	adiw	r26, 0x06	; 6
      dc:	ed 91       	ld	r30, X+
      de:	fc 91       	ld	r31, X
      e0:	17 97       	sbiw	r26, 0x07	; 7
      e2:	88 e6       	ldi	r24, 0x68	; 104
      e4:	09 95       	icall
      e6:	91 e0       	ldi	r25, 0x01	; 1
      e8:	81 11       	cpse	r24, r1
      ea:	01 c0       	rjmp	.+2      	; 0xee <a_ds3231_iic_multiple_read+0x18>
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	89 2f       	mov	r24, r25
      f0:	08 95       	ret

000000f2 <a_ds3231_hex2bcd>:
      f2:	9d ec       	ldi	r25, 0xCD	; 205
      f4:	89 9f       	mul	r24, r25
      f6:	91 2d       	mov	r25, r1
      f8:	11 24       	eor	r1, r1
      fa:	96 95       	lsr	r25
      fc:	96 95       	lsr	r25
      fe:	96 95       	lsr	r25
     100:	39 2f       	mov	r19, r25
     102:	33 0f       	add	r19, r19
     104:	23 2f       	mov	r18, r19
     106:	22 0f       	add	r18, r18
     108:	22 0f       	add	r18, r18
     10a:	23 0f       	add	r18, r19
     10c:	82 1b       	sub	r24, r18
     10e:	20 e1       	ldi	r18, 0x10	; 16
     110:	92 9f       	mul	r25, r18
     112:	80 0d       	add	r24, r0
     114:	11 24       	eor	r1, r1
     116:	08 95       	ret

00000118 <ds3231_set_time>:
     118:	cf 92       	push	r12
     11a:	df 92       	push	r13
     11c:	ef 92       	push	r14
     11e:	ff 92       	push	r15
     120:	0f 93       	push	r16
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	00 97       	sbiw	r24, 0x00	; 0
     12a:	09 f4       	brne	.+2      	; 0x12e <ds3231_set_time+0x16>
     12c:	eb c1       	rjmp	.+982    	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     12e:	dc 01       	movw	r26, r24
     130:	1e 96       	adiw	r26, 0x0e	; 14
     132:	cc 91       	ld	r28, X
     134:	1e 97       	sbiw	r26, 0x0e	; 14
     136:	c1 30       	cpi	r28, 0x01	; 1
     138:	09 f0       	breq	.+2      	; 0x13c <ds3231_set_time+0x24>
     13a:	e6 c1       	rjmp	.+972    	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
     13c:	7b 01       	movw	r14, r22
     13e:	8c 01       	movw	r16, r24
     140:	61 15       	cp	r22, r1
     142:	71 05       	cpc	r23, r1
     144:	69 f4       	brne	.+26     	; 0x160 <ds3231_set_time+0x48>
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	91 e0       	ldi	r25, 0x01	; 1
     14a:	9f 93       	push	r25
     14c:	8f 93       	push	r24
     14e:	18 96       	adiw	r26, 0x08	; 8
     150:	ed 91       	ld	r30, X+
     152:	fc 91       	ld	r31, X
     154:	19 97       	sbiw	r26, 0x09	; 9
     156:	09 95       	icall
     158:	0f 90       	pop	r0
     15a:	0f 90       	pop	r0
     15c:	c2 e0       	ldi	r28, 0x02	; 2
     15e:	d7 c1       	rjmp	.+942    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     160:	fb 01       	movw	r30, r22
     162:	80 85       	ldd	r24, Z+8	; 0x08
     164:	81 30       	cpi	r24, 0x01	; 1
     166:	09 f0       	breq	.+2      	; 0x16a <ds3231_set_time+0x52>
     168:	7f c0       	rjmp	.+254    	; 0x268 <ds3231_set_time+0x150>
     16a:	80 81       	ld	r24, Z
     16c:	91 81       	ldd	r25, Z+1	; 0x01
     16e:	86 5c       	subi	r24, 0xC6	; 198
     170:	97 40       	sbci	r25, 0x07	; 7
     172:	89 3c       	cpi	r24, 0xC9	; 201
     174:	91 05       	cpc	r25, r1
     176:	68 f0       	brcs	.+26     	; 0x192 <ds3231_set_time+0x7a>
     178:	87 e1       	ldi	r24, 0x17	; 23
     17a:	91 e0       	ldi	r25, 0x01	; 1
     17c:	9f 93       	push	r25
     17e:	8f 93       	push	r24
     180:	18 96       	adiw	r26, 0x08	; 8
     182:	ed 91       	ld	r30, X+
     184:	fc 91       	ld	r31, X
     186:	19 97       	sbiw	r26, 0x09	; 9
     188:	09 95       	icall
     18a:	0f 90       	pop	r0
     18c:	0f 90       	pop	r0
     18e:	c4 e0       	ldi	r28, 0x04	; 4
     190:	be c1       	rjmp	.+892    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     192:	fb 01       	movw	r30, r22
     194:	82 81       	ldd	r24, Z+2	; 0x02
     196:	81 50       	subi	r24, 0x01	; 1
     198:	8c 30       	cpi	r24, 0x0C	; 12
     19a:	68 f0       	brcs	.+26     	; 0x1b6 <ds3231_set_time+0x9e>
     19c:	8b e4       	ldi	r24, 0x4B	; 75
     19e:	91 e0       	ldi	r25, 0x01	; 1
     1a0:	9f 93       	push	r25
     1a2:	8f 93       	push	r24
     1a4:	18 96       	adiw	r26, 0x08	; 8
     1a6:	ed 91       	ld	r30, X+
     1a8:	fc 91       	ld	r31, X
     1aa:	19 97       	sbiw	r26, 0x09	; 9
     1ac:	09 95       	icall
     1ae:	0f 90       	pop	r0
     1b0:	0f 90       	pop	r0
     1b2:	c4 e0       	ldi	r28, 0x04	; 4
     1b4:	ac c1       	rjmp	.+856    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     1b6:	fb 01       	movw	r30, r22
     1b8:	83 81       	ldd	r24, Z+3	; 0x03
     1ba:	81 50       	subi	r24, 0x01	; 1
     1bc:	87 30       	cpi	r24, 0x07	; 7
     1be:	68 f0       	brcs	.+26     	; 0x1da <ds3231_set_time+0xc2>
     1c0:	89 e7       	ldi	r24, 0x79	; 121
     1c2:	91 e0       	ldi	r25, 0x01	; 1
     1c4:	9f 93       	push	r25
     1c6:	8f 93       	push	r24
     1c8:	18 96       	adiw	r26, 0x08	; 8
     1ca:	ed 91       	ld	r30, X+
     1cc:	fc 91       	ld	r31, X
     1ce:	19 97       	sbiw	r26, 0x09	; 9
     1d0:	09 95       	icall
     1d2:	0f 90       	pop	r0
     1d4:	0f 90       	pop	r0
     1d6:	c4 e0       	ldi	r28, 0x04	; 4
     1d8:	9a c1       	rjmp	.+820    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     1da:	fb 01       	movw	r30, r22
     1dc:	84 81       	ldd	r24, Z+4	; 0x04
     1de:	81 50       	subi	r24, 0x01	; 1
     1e0:	8f 31       	cpi	r24, 0x1F	; 31
     1e2:	68 f0       	brcs	.+26     	; 0x1fe <ds3231_set_time+0xe6>
     1e4:	85 ea       	ldi	r24, 0xA5	; 165
     1e6:	91 e0       	ldi	r25, 0x01	; 1
     1e8:	9f 93       	push	r25
     1ea:	8f 93       	push	r24
     1ec:	18 96       	adiw	r26, 0x08	; 8
     1ee:	ed 91       	ld	r30, X+
     1f0:	fc 91       	ld	r31, X
     1f2:	19 97       	sbiw	r26, 0x09	; 9
     1f4:	09 95       	icall
     1f6:	0f 90       	pop	r0
     1f8:	0f 90       	pop	r0
     1fa:	c4 e0       	ldi	r28, 0x04	; 4
     1fc:	88 c1       	rjmp	.+784    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     1fe:	fb 01       	movw	r30, r22
     200:	85 81       	ldd	r24, Z+5	; 0x05
     202:	81 50       	subi	r24, 0x01	; 1
     204:	8c 30       	cpi	r24, 0x0C	; 12
     206:	68 f0       	brcs	.+26     	; 0x222 <ds3231_set_time+0x10a>
     208:	82 ed       	ldi	r24, 0xD2	; 210
     20a:	91 e0       	ldi	r25, 0x01	; 1
     20c:	9f 93       	push	r25
     20e:	8f 93       	push	r24
     210:	18 96       	adiw	r26, 0x08	; 8
     212:	ed 91       	ld	r30, X+
     214:	fc 91       	ld	r31, X
     216:	19 97       	sbiw	r26, 0x09	; 9
     218:	09 95       	icall
     21a:	0f 90       	pop	r0
     21c:	0f 90       	pop	r0
     21e:	c4 e0       	ldi	r28, 0x04	; 4
     220:	76 c1       	rjmp	.+748    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     222:	fb 01       	movw	r30, r22
     224:	86 81       	ldd	r24, Z+6	; 0x06
     226:	8c 33       	cpi	r24, 0x3C	; 60
     228:	68 f0       	brcs	.+26     	; 0x244 <ds3231_set_time+0x12c>
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	92 e0       	ldi	r25, 0x02	; 2
     22e:	9f 93       	push	r25
     230:	8f 93       	push	r24
     232:	18 96       	adiw	r26, 0x08	; 8
     234:	ed 91       	ld	r30, X+
     236:	fc 91       	ld	r31, X
     238:	19 97       	sbiw	r26, 0x09	; 9
     23a:	09 95       	icall
     23c:	0f 90       	pop	r0
     23e:	0f 90       	pop	r0
     240:	c4 e0       	ldi	r28, 0x04	; 4
     242:	65 c1       	rjmp	.+714    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     244:	fb 01       	movw	r30, r22
     246:	87 81       	ldd	r24, Z+7	; 0x07
     248:	8c 33       	cpi	r24, 0x3C	; 60
     24a:	08 f4       	brcc	.+2      	; 0x24e <ds3231_set_time+0x136>
     24c:	9a c0       	rjmp	.+308    	; 0x382 <ds3231_set_time+0x26a>
     24e:	88 e2       	ldi	r24, 0x28	; 40
     250:	92 e0       	ldi	r25, 0x02	; 2
     252:	9f 93       	push	r25
     254:	8f 93       	push	r24
     256:	18 96       	adiw	r26, 0x08	; 8
     258:	ed 91       	ld	r30, X+
     25a:	fc 91       	ld	r31, X
     25c:	19 97       	sbiw	r26, 0x09	; 9
     25e:	09 95       	icall
     260:	0f 90       	pop	r0
     262:	0f 90       	pop	r0
     264:	c4 e0       	ldi	r28, 0x04	; 4
     266:	53 c1       	rjmp	.+678    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     268:	81 11       	cpse	r24, r1
     26a:	7e c0       	rjmp	.+252    	; 0x368 <ds3231_set_time+0x250>
     26c:	fb 01       	movw	r30, r22
     26e:	80 81       	ld	r24, Z
     270:	91 81       	ldd	r25, Z+1	; 0x01
     272:	86 5c       	subi	r24, 0xC6	; 198
     274:	97 40       	sbci	r25, 0x07	; 7
     276:	89 3c       	cpi	r24, 0xC9	; 201
     278:	91 05       	cpc	r25, r1
     27a:	68 f0       	brcs	.+26     	; 0x296 <ds3231_set_time+0x17e>
     27c:	87 e1       	ldi	r24, 0x17	; 23
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	9f 93       	push	r25
     282:	8f 93       	push	r24
     284:	18 96       	adiw	r26, 0x08	; 8
     286:	ed 91       	ld	r30, X+
     288:	fc 91       	ld	r31, X
     28a:	19 97       	sbiw	r26, 0x09	; 9
     28c:	09 95       	icall
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	c4 e0       	ldi	r28, 0x04	; 4
     294:	3c c1       	rjmp	.+632    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     296:	fb 01       	movw	r30, r22
     298:	82 81       	ldd	r24, Z+2	; 0x02
     29a:	81 50       	subi	r24, 0x01	; 1
     29c:	8c 30       	cpi	r24, 0x0C	; 12
     29e:	68 f0       	brcs	.+26     	; 0x2ba <ds3231_set_time+0x1a2>
     2a0:	8b e4       	ldi	r24, 0x4B	; 75
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	9f 93       	push	r25
     2a6:	8f 93       	push	r24
     2a8:	18 96       	adiw	r26, 0x08	; 8
     2aa:	ed 91       	ld	r30, X+
     2ac:	fc 91       	ld	r31, X
     2ae:	19 97       	sbiw	r26, 0x09	; 9
     2b0:	09 95       	icall
     2b2:	0f 90       	pop	r0
     2b4:	0f 90       	pop	r0
     2b6:	c4 e0       	ldi	r28, 0x04	; 4
     2b8:	2a c1       	rjmp	.+596    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     2ba:	fb 01       	movw	r30, r22
     2bc:	83 81       	ldd	r24, Z+3	; 0x03
     2be:	81 50       	subi	r24, 0x01	; 1
     2c0:	87 30       	cpi	r24, 0x07	; 7
     2c2:	68 f0       	brcs	.+26     	; 0x2de <ds3231_set_time+0x1c6>
     2c4:	89 e7       	ldi	r24, 0x79	; 121
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	9f 93       	push	r25
     2ca:	8f 93       	push	r24
     2cc:	18 96       	adiw	r26, 0x08	; 8
     2ce:	ed 91       	ld	r30, X+
     2d0:	fc 91       	ld	r31, X
     2d2:	19 97       	sbiw	r26, 0x09	; 9
     2d4:	09 95       	icall
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	c4 e0       	ldi	r28, 0x04	; 4
     2dc:	18 c1       	rjmp	.+560    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     2de:	fb 01       	movw	r30, r22
     2e0:	84 81       	ldd	r24, Z+4	; 0x04
     2e2:	81 50       	subi	r24, 0x01	; 1
     2e4:	8f 31       	cpi	r24, 0x1F	; 31
     2e6:	68 f0       	brcs	.+26     	; 0x302 <ds3231_set_time+0x1ea>
     2e8:	85 ea       	ldi	r24, 0xA5	; 165
     2ea:	91 e0       	ldi	r25, 0x01	; 1
     2ec:	9f 93       	push	r25
     2ee:	8f 93       	push	r24
     2f0:	18 96       	adiw	r26, 0x08	; 8
     2f2:	ed 91       	ld	r30, X+
     2f4:	fc 91       	ld	r31, X
     2f6:	19 97       	sbiw	r26, 0x09	; 9
     2f8:	09 95       	icall
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	c4 e0       	ldi	r28, 0x04	; 4
     300:	06 c1       	rjmp	.+524    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     302:	fb 01       	movw	r30, r22
     304:	85 81       	ldd	r24, Z+5	; 0x05
     306:	88 31       	cpi	r24, 0x18	; 24
     308:	68 f0       	brcs	.+26     	; 0x324 <ds3231_set_time+0x20c>
     30a:	8f e4       	ldi	r24, 0x4F	; 79
     30c:	92 e0       	ldi	r25, 0x02	; 2
     30e:	9f 93       	push	r25
     310:	8f 93       	push	r24
     312:	18 96       	adiw	r26, 0x08	; 8
     314:	ed 91       	ld	r30, X+
     316:	fc 91       	ld	r31, X
     318:	19 97       	sbiw	r26, 0x09	; 9
     31a:	09 95       	icall
     31c:	0f 90       	pop	r0
     31e:	0f 90       	pop	r0
     320:	c4 e0       	ldi	r28, 0x04	; 4
     322:	f5 c0       	rjmp	.+490    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     324:	fb 01       	movw	r30, r22
     326:	86 81       	ldd	r24, Z+6	; 0x06
     328:	8c 33       	cpi	r24, 0x3C	; 60
     32a:	68 f0       	brcs	.+26     	; 0x346 <ds3231_set_time+0x22e>
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	92 e0       	ldi	r25, 0x02	; 2
     330:	9f 93       	push	r25
     332:	8f 93       	push	r24
     334:	18 96       	adiw	r26, 0x08	; 8
     336:	ed 91       	ld	r30, X+
     338:	fc 91       	ld	r31, X
     33a:	19 97       	sbiw	r26, 0x09	; 9
     33c:	09 95       	icall
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	c4 e0       	ldi	r28, 0x04	; 4
     344:	e4 c0       	rjmp	.+456    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     346:	fb 01       	movw	r30, r22
     348:	87 81       	ldd	r24, Z+7	; 0x07
     34a:	8c 33       	cpi	r24, 0x3C	; 60
     34c:	d0 f0       	brcs	.+52     	; 0x382 <ds3231_set_time+0x26a>
     34e:	88 e2       	ldi	r24, 0x28	; 40
     350:	92 e0       	ldi	r25, 0x02	; 2
     352:	9f 93       	push	r25
     354:	8f 93       	push	r24
     356:	18 96       	adiw	r26, 0x08	; 8
     358:	ed 91       	ld	r30, X+
     35a:	fc 91       	ld	r31, X
     35c:	19 97       	sbiw	r26, 0x09	; 9
     35e:	09 95       	icall
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	c4 e0       	ldi	r28, 0x04	; 4
     366:	d3 c0       	rjmp	.+422    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     368:	84 e7       	ldi	r24, 0x74	; 116
     36a:	92 e0       	ldi	r25, 0x02	; 2
     36c:	9f 93       	push	r25
     36e:	8f 93       	push	r24
     370:	18 96       	adiw	r26, 0x08	; 8
     372:	ed 91       	ld	r30, X+
     374:	fc 91       	ld	r31, X
     376:	19 97       	sbiw	r26, 0x09	; 9
     378:	09 95       	icall
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
     37e:	c4 e0       	ldi	r28, 0x04	; 4
     380:	c6 c0       	rjmp	.+396    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     382:	f7 01       	movw	r30, r14
     384:	87 81       	ldd	r24, Z+7	; 0x07
     386:	b5 de       	rcall	.-662    	; 0xf2 <a_ds3231_hex2bcd>
     388:	48 2f       	mov	r20, r24
     38a:	60 e0       	ldi	r22, 0x00	; 0
     38c:	c8 01       	movw	r24, r16
     38e:	88 de       	rcall	.-752    	; 0xa0 <a_ds3231_iic_write>
     390:	88 23       	and	r24, r24
     392:	69 f0       	breq	.+26     	; 0x3ae <ds3231_set_time+0x296>
     394:	80 e9       	ldi	r24, 0x90	; 144
     396:	92 e0       	ldi	r25, 0x02	; 2
     398:	9f 93       	push	r25
     39a:	8f 93       	push	r24
     39c:	d8 01       	movw	r26, r16
     39e:	18 96       	adiw	r26, 0x08	; 8
     3a0:	ed 91       	ld	r30, X+
     3a2:	fc 91       	ld	r31, X
     3a4:	19 97       	sbiw	r26, 0x09	; 9
     3a6:	09 95       	icall
     3a8:	0f 90       	pop	r0
     3aa:	0f 90       	pop	r0
     3ac:	b0 c0       	rjmp	.+352    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     3ae:	f7 01       	movw	r30, r14
     3b0:	86 81       	ldd	r24, Z+6	; 0x06
     3b2:	9f de       	rcall	.-706    	; 0xf2 <a_ds3231_hex2bcd>
     3b4:	48 2f       	mov	r20, r24
     3b6:	61 e0       	ldi	r22, 0x01	; 1
     3b8:	c8 01       	movw	r24, r16
     3ba:	72 de       	rcall	.-796    	; 0xa0 <a_ds3231_iic_write>
     3bc:	88 23       	and	r24, r24
     3be:	69 f0       	breq	.+26     	; 0x3da <ds3231_set_time+0x2c2>
     3c0:	8e ea       	ldi	r24, 0xAE	; 174
     3c2:	92 e0       	ldi	r25, 0x02	; 2
     3c4:	9f 93       	push	r25
     3c6:	8f 93       	push	r24
     3c8:	d8 01       	movw	r26, r16
     3ca:	18 96       	adiw	r26, 0x08	; 8
     3cc:	ed 91       	ld	r30, X+
     3ce:	fc 91       	ld	r31, X
     3d0:	19 97       	sbiw	r26, 0x09	; 9
     3d2:	09 95       	icall
     3d4:	0f 90       	pop	r0
     3d6:	0f 90       	pop	r0
     3d8:	9a c0       	rjmp	.+308    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     3da:	f7 01       	movw	r30, r14
     3dc:	80 85       	ldd	r24, Z+8	; 0x08
     3de:	81 30       	cpi	r24, 0x01	; 1
     3e0:	61 f4       	brne	.+24     	; 0x3fa <ds3231_set_time+0x2e2>
     3e2:	85 81       	ldd	r24, Z+5	; 0x05
     3e4:	86 de       	rcall	.-756    	; 0xf2 <a_ds3231_hex2bcd>
     3e6:	d7 01       	movw	r26, r14
     3e8:	19 96       	adiw	r26, 0x09	; 9
     3ea:	2c 91       	ld	r18, X
     3ec:	b0 e2       	ldi	r27, 0x20	; 32
     3ee:	2b 9f       	mul	r18, r27
     3f0:	90 01       	movw	r18, r0
     3f2:	11 24       	eor	r1, r1
     3f4:	20 64       	ori	r18, 0x40	; 64
     3f6:	82 2b       	or	r24, r18
     3f8:	03 c0       	rjmp	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fa:	f7 01       	movw	r30, r14
     3fc:	85 81       	ldd	r24, Z+5	; 0x05
     3fe:	79 de       	rcall	.-782    	; 0xf2 <a_ds3231_hex2bcd>
     400:	48 2f       	mov	r20, r24
     402:	62 e0       	ldi	r22, 0x02	; 2
     404:	c8 01       	movw	r24, r16
     406:	4c de       	rcall	.-872    	; 0xa0 <a_ds3231_iic_write>
     408:	88 23       	and	r24, r24
     40a:	69 f0       	breq	.+26     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     40c:	8c ec       	ldi	r24, 0xCC	; 204
     40e:	92 e0       	ldi	r25, 0x02	; 2
     410:	9f 93       	push	r25
     412:	8f 93       	push	r24
     414:	d8 01       	movw	r26, r16
     416:	18 96       	adiw	r26, 0x08	; 8
     418:	ed 91       	ld	r30, X+
     41a:	fc 91       	ld	r31, X
     41c:	19 97       	sbiw	r26, 0x09	; 9
     41e:	09 95       	icall
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	74 c0       	rjmp	.+232    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     426:	f7 01       	movw	r30, r14
     428:	83 81       	ldd	r24, Z+3	; 0x03
     42a:	63 de       	rcall	.-826    	; 0xf2 <a_ds3231_hex2bcd>
     42c:	48 2f       	mov	r20, r24
     42e:	63 e0       	ldi	r22, 0x03	; 3
     430:	c8 01       	movw	r24, r16
     432:	36 de       	rcall	.-916    	; 0xa0 <a_ds3231_iic_write>
     434:	88 23       	and	r24, r24
     436:	69 f0       	breq	.+26     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     438:	88 ee       	ldi	r24, 0xE8	; 232
     43a:	92 e0       	ldi	r25, 0x02	; 2
     43c:	9f 93       	push	r25
     43e:	8f 93       	push	r24
     440:	d8 01       	movw	r26, r16
     442:	18 96       	adiw	r26, 0x08	; 8
     444:	ed 91       	ld	r30, X+
     446:	fc 91       	ld	r31, X
     448:	19 97       	sbiw	r26, 0x09	; 9
     44a:	09 95       	icall
     44c:	0f 90       	pop	r0
     44e:	0f 90       	pop	r0
     450:	5e c0       	rjmp	.+188    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     452:	f7 01       	movw	r30, r14
     454:	84 81       	ldd	r24, Z+4	; 0x04
     456:	4d de       	rcall	.-870    	; 0xf2 <a_ds3231_hex2bcd>
     458:	48 2f       	mov	r20, r24
     45a:	64 e0       	ldi	r22, 0x04	; 4
     45c:	c8 01       	movw	r24, r16
     45e:	20 de       	rcall	.-960    	; 0xa0 <a_ds3231_iic_write>
     460:	88 23       	and	r24, r24
     462:	69 f0       	breq	.+26     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     464:	84 e0       	ldi	r24, 0x04	; 4
     466:	93 e0       	ldi	r25, 0x03	; 3
     468:	9f 93       	push	r25
     46a:	8f 93       	push	r24
     46c:	d8 01       	movw	r26, r16
     46e:	18 96       	adiw	r26, 0x08	; 8
     470:	ed 91       	ld	r30, X+
     472:	fc 91       	ld	r31, X
     474:	19 97       	sbiw	r26, 0x09	; 9
     476:	09 95       	icall
     478:	0f 90       	pop	r0
     47a:	0f 90       	pop	r0
     47c:	48 c0       	rjmp	.+144    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     47e:	f7 01       	movw	r30, r14
     480:	80 81       	ld	r24, Z
     482:	91 81       	ldd	r25, Z+1	; 0x01
     484:	6c 01       	movw	r12, r24
     486:	f6 ec       	ldi	r31, 0xC6	; 198
     488:	cf 1a       	sub	r12, r31
     48a:	f7 e0       	ldi	r31, 0x07	; 7
     48c:	df 0a       	sbc	r13, r31
     48e:	24 e6       	ldi	r18, 0x64	; 100
     490:	c2 16       	cp	r12, r18
     492:	d1 04       	cpc	r13, r1
     494:	38 f0       	brcs	.+14     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
     496:	6c 01       	movw	r12, r24
     498:	aa e2       	ldi	r26, 0x2A	; 42
     49a:	ca 1a       	sub	r12, r26
     49c:	a8 e0       	ldi	r26, 0x08	; 8
     49e:	da 0a       	sbc	r13, r26
     4a0:	d1 e0       	ldi	r29, 0x01	; 1
     4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     4a4:	d0 e0       	ldi	r29, 0x00	; 0
     4a6:	f7 01       	movw	r30, r14
     4a8:	82 81       	ldd	r24, Z+2	; 0x02
     4aa:	23 de       	rcall	.-954    	; 0xf2 <a_ds3231_hex2bcd>
     4ac:	d7 95       	ror	r29
     4ae:	dd 27       	eor	r29, r29
     4b0:	d7 95       	ror	r29
     4b2:	4d 2f       	mov	r20, r29
     4b4:	48 2b       	or	r20, r24
     4b6:	65 e0       	ldi	r22, 0x05	; 5
     4b8:	c8 01       	movw	r24, r16
     4ba:	f2 dd       	rcall	.-1052   	; 0xa0 <a_ds3231_iic_write>
     4bc:	88 23       	and	r24, r24
     4be:	69 f0       	breq	.+26     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
     4c0:	80 e2       	ldi	r24, 0x20	; 32
     4c2:	93 e0       	ldi	r25, 0x03	; 3
     4c4:	9f 93       	push	r25
     4c6:	8f 93       	push	r24
     4c8:	d8 01       	movw	r26, r16
     4ca:	18 96       	adiw	r26, 0x08	; 8
     4cc:	ed 91       	ld	r30, X+
     4ce:	fc 91       	ld	r31, X
     4d0:	19 97       	sbiw	r26, 0x09	; 9
     4d2:	09 95       	icall
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	1a c0       	rjmp	.+52     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     4da:	8c 2d       	mov	r24, r12
     4dc:	0a de       	rcall	.-1004   	; 0xf2 <a_ds3231_hex2bcd>
     4de:	48 2f       	mov	r20, r24
     4e0:	66 e0       	ldi	r22, 0x06	; 6
     4e2:	c8 01       	movw	r24, r16
     4e4:	dd dd       	rcall	.-1094   	; 0xa0 <a_ds3231_iic_write>
     4e6:	88 23       	and	r24, r24
     4e8:	89 f0       	breq	.+34     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     4ea:	89 e4       	ldi	r24, 0x49	; 73
     4ec:	93 e0       	ldi	r25, 0x03	; 3
     4ee:	9f 93       	push	r25
     4f0:	8f 93       	push	r24
     4f2:	d8 01       	movw	r26, r16
     4f4:	18 96       	adiw	r26, 0x08	; 8
     4f6:	ed 91       	ld	r30, X+
     4f8:	fc 91       	ld	r31, X
     4fa:	19 97       	sbiw	r26, 0x09	; 9
     4fc:	09 95       	icall
     4fe:	0f 90       	pop	r0
     500:	0f 90       	pop	r0
     502:	05 c0       	rjmp	.+10     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     504:	c2 e0       	ldi	r28, 0x02	; 2
     506:	03 c0       	rjmp	.+6      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     508:	c3 e0       	ldi	r28, 0x03	; 3
     50a:	01 c0       	rjmp	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     50c:	c0 e0       	ldi	r28, 0x00	; 0
     50e:	8c 2f       	mov	r24, r28
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	1f 91       	pop	r17
     516:	0f 91       	pop	r16
     518:	ff 90       	pop	r15
     51a:	ef 90       	pop	r14
     51c:	df 90       	pop	r13
     51e:	cf 90       	pop	r12
     520:	08 95       	ret

00000522 <ds3231_set_oscillator>:
     522:	ef 92       	push	r14
     524:	ff 92       	push	r15
     526:	0f 93       	push	r16
     528:	1f 93       	push	r17
     52a:	cf 93       	push	r28
     52c:	df 93       	push	r29
     52e:	1f 92       	push	r1
     530:	cd b7       	in	r28, 0x3d	; 61
     532:	de b7       	in	r29, 0x3e	; 62
     534:	00 97       	sbiw	r24, 0x00	; 0
     536:	b9 f1       	breq	.+110    	; 0x5a6 <ds3231_set_oscillator+0x84>
     538:	dc 01       	movw	r26, r24
     53a:	1e 96       	adiw	r26, 0x0e	; 14
     53c:	1c 91       	ld	r17, X
     53e:	11 30       	cpi	r17, 0x01	; 1
     540:	a1 f5       	brne	.+104    	; 0x5aa <ds3231_set_oscillator+0x88>
     542:	06 2f       	mov	r16, r22
     544:	7c 01       	movw	r14, r24
     546:	21 e0       	ldi	r18, 0x01	; 1
     548:	ae 01       	movw	r20, r28
     54a:	4f 5f       	subi	r20, 0xFF	; 255
     54c:	5f 4f       	sbci	r21, 0xFF	; 255
     54e:	6e e0       	ldi	r22, 0x0E	; 14
     550:	c2 dd       	rcall	.-1148   	; 0xd6 <a_ds3231_iic_multiple_read>
     552:	88 23       	and	r24, r24
     554:	69 f0       	breq	.+26     	; 0x570 <ds3231_set_oscillator+0x4e>
     556:	8f e7       	ldi	r24, 0x7F	; 127
     558:	94 e0       	ldi	r25, 0x04	; 4
     55a:	9f 93       	push	r25
     55c:	8f 93       	push	r24
     55e:	d7 01       	movw	r26, r14
     560:	18 96       	adiw	r26, 0x08	; 8
     562:	ed 91       	ld	r30, X+
     564:	fc 91       	ld	r31, X
     566:	19 97       	sbiw	r26, 0x09	; 9
     568:	09 95       	icall
     56a:	0f 90       	pop	r0
     56c:	0f 90       	pop	r0
     56e:	20 c0       	rjmp	.+64     	; 0x5b0 <ds3231_set_oscillator+0x8e>
     570:	49 81       	ldd	r20, Y+1	; 0x01
     572:	4f 77       	andi	r20, 0x7F	; 127
     574:	00 23       	and	r16, r16
     576:	11 f0       	breq	.+4      	; 0x57c <ds3231_set_oscillator+0x5a>
     578:	80 e0       	ldi	r24, 0x00	; 0
     57a:	01 c0       	rjmp	.+2      	; 0x57e <ds3231_set_oscillator+0x5c>
     57c:	80 e8       	ldi	r24, 0x80	; 128
     57e:	48 2b       	or	r20, r24
     580:	49 83       	std	Y+1, r20	; 0x01
     582:	6e e0       	ldi	r22, 0x0E	; 14
     584:	c7 01       	movw	r24, r14
     586:	8c dd       	rcall	.-1256   	; 0xa0 <a_ds3231_iic_write>
     588:	88 23       	and	r24, r24
     58a:	89 f0       	breq	.+34     	; 0x5ae <ds3231_set_oscillator+0x8c>
     58c:	8d e9       	ldi	r24, 0x9D	; 157
     58e:	94 e0       	ldi	r25, 0x04	; 4
     590:	9f 93       	push	r25
     592:	8f 93       	push	r24
     594:	d7 01       	movw	r26, r14
     596:	18 96       	adiw	r26, 0x08	; 8
     598:	ed 91       	ld	r30, X+
     59a:	fc 91       	ld	r31, X
     59c:	19 97       	sbiw	r26, 0x09	; 9
     59e:	09 95       	icall
     5a0:	0f 90       	pop	r0
     5a2:	0f 90       	pop	r0
     5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <ds3231_set_oscillator+0x8e>
     5a6:	12 e0       	ldi	r17, 0x02	; 2
     5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <ds3231_set_oscillator+0x8e>
     5aa:	13 e0       	ldi	r17, 0x03	; 3
     5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <ds3231_set_oscillator+0x8e>
     5ae:	10 e0       	ldi	r17, 0x00	; 0
     5b0:	81 2f       	mov	r24, r17
     5b2:	0f 90       	pop	r0
     5b4:	df 91       	pop	r29
     5b6:	cf 91       	pop	r28
     5b8:	1f 91       	pop	r17
     5ba:	0f 91       	pop	r16
     5bc:	ff 90       	pop	r15
     5be:	ef 90       	pop	r14
     5c0:	08 95       	ret

000005c2 <ds3231_set_alarm_interrupt>:
     5c2:	df 92       	push	r13
     5c4:	ef 92       	push	r14
     5c6:	ff 92       	push	r15
     5c8:	0f 93       	push	r16
     5ca:	1f 93       	push	r17
     5cc:	cf 93       	push	r28
     5ce:	df 93       	push	r29
     5d0:	1f 92       	push	r1
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
     5d6:	00 97       	sbiw	r24, 0x00	; 0
     5d8:	09 f4       	brne	.+2      	; 0x5dc <ds3231_set_alarm_interrupt+0x1a>
     5da:	44 c0       	rjmp	.+136    	; 0x664 <ds3231_set_alarm_interrupt+0xa2>
     5dc:	dc 01       	movw	r26, r24
     5de:	1e 96       	adiw	r26, 0x0e	; 14
     5e0:	1c 91       	ld	r17, X
     5e2:	11 30       	cpi	r17, 0x01	; 1
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <ds3231_set_alarm_interrupt+0x26>
     5e6:	40 c0       	rjmp	.+128    	; 0x668 <ds3231_set_alarm_interrupt+0xa6>
     5e8:	04 2f       	mov	r16, r20
     5ea:	d6 2e       	mov	r13, r22
     5ec:	7c 01       	movw	r14, r24
     5ee:	21 e0       	ldi	r18, 0x01	; 1
     5f0:	ae 01       	movw	r20, r28
     5f2:	4f 5f       	subi	r20, 0xFF	; 255
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6e e0       	ldi	r22, 0x0E	; 14
     5f8:	6e dd       	rcall	.-1316   	; 0xd6 <a_ds3231_iic_multiple_read>
     5fa:	88 23       	and	r24, r24
     5fc:	69 f0       	breq	.+26     	; 0x618 <ds3231_set_alarm_interrupt+0x56>
     5fe:	8f e7       	ldi	r24, 0x7F	; 127
     600:	94 e0       	ldi	r25, 0x04	; 4
     602:	9f 93       	push	r25
     604:	8f 93       	push	r24
     606:	d7 01       	movw	r26, r14
     608:	18 96       	adiw	r26, 0x08	; 8
     60a:	ed 91       	ld	r30, X+
     60c:	fc 91       	ld	r31, X
     60e:	19 97       	sbiw	r26, 0x09	; 9
     610:	09 95       	icall
     612:	0f 90       	pop	r0
     614:	0f 90       	pop	r0
     616:	2b c0       	rjmp	.+86     	; 0x66e <ds3231_set_alarm_interrupt+0xac>
     618:	81 e0       	ldi	r24, 0x01	; 1
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0d 2c       	mov	r0, r13
     61e:	02 c0       	rjmp	.+4      	; 0x624 <ds3231_set_alarm_interrupt+0x62>
     620:	88 0f       	add	r24, r24
     622:	99 1f       	adc	r25, r25
     624:	0a 94       	dec	r0
     626:	e2 f7       	brpl	.-8      	; 0x620 <ds3231_set_alarm_interrupt+0x5e>
     628:	80 95       	com	r24
     62a:	49 81       	ldd	r20, Y+1	; 0x01
     62c:	48 23       	and	r20, r24
     62e:	80 2f       	mov	r24, r16
     630:	90 e0       	ldi	r25, 0x00	; 0
     632:	02 c0       	rjmp	.+4      	; 0x638 <ds3231_set_alarm_interrupt+0x76>
     634:	88 0f       	add	r24, r24
     636:	99 1f       	adc	r25, r25
     638:	da 94       	dec	r13
     63a:	e2 f7       	brpl	.-8      	; 0x634 <ds3231_set_alarm_interrupt+0x72>
     63c:	48 2b       	or	r20, r24
     63e:	49 83       	std	Y+1, r20	; 0x01
     640:	6e e0       	ldi	r22, 0x0E	; 14
     642:	c7 01       	movw	r24, r14
     644:	2d dd       	rcall	.-1446   	; 0xa0 <a_ds3231_iic_write>
     646:	88 23       	and	r24, r24
     648:	89 f0       	breq	.+34     	; 0x66c <ds3231_set_alarm_interrupt+0xaa>
     64a:	8d e9       	ldi	r24, 0x9D	; 157
     64c:	94 e0       	ldi	r25, 0x04	; 4
     64e:	9f 93       	push	r25
     650:	8f 93       	push	r24
     652:	d7 01       	movw	r26, r14
     654:	18 96       	adiw	r26, 0x08	; 8
     656:	ed 91       	ld	r30, X+
     658:	fc 91       	ld	r31, X
     65a:	19 97       	sbiw	r26, 0x09	; 9
     65c:	09 95       	icall
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	05 c0       	rjmp	.+10     	; 0x66e <ds3231_set_alarm_interrupt+0xac>
     664:	12 e0       	ldi	r17, 0x02	; 2
     666:	03 c0       	rjmp	.+6      	; 0x66e <ds3231_set_alarm_interrupt+0xac>
     668:	13 e0       	ldi	r17, 0x03	; 3
     66a:	01 c0       	rjmp	.+2      	; 0x66e <ds3231_set_alarm_interrupt+0xac>
     66c:	10 e0       	ldi	r17, 0x00	; 0
     66e:	81 2f       	mov	r24, r17
     670:	0f 90       	pop	r0
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	ff 90       	pop	r15
     67c:	ef 90       	pop	r14
     67e:	df 90       	pop	r13
     680:	08 95       	ret

00000682 <ds3231_set_pin>:
     682:	ef 92       	push	r14
     684:	ff 92       	push	r15
     686:	0f 93       	push	r16
     688:	1f 93       	push	r17
     68a:	cf 93       	push	r28
     68c:	df 93       	push	r29
     68e:	1f 92       	push	r1
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	00 97       	sbiw	r24, 0x00	; 0
     696:	a9 f1       	breq	.+106    	; 0x702 <ds3231_set_pin+0x80>
     698:	dc 01       	movw	r26, r24
     69a:	1e 96       	adiw	r26, 0x0e	; 14
     69c:	1c 91       	ld	r17, X
     69e:	11 30       	cpi	r17, 0x01	; 1
     6a0:	91 f5       	brne	.+100    	; 0x706 <ds3231_set_pin+0x84>
     6a2:	06 2f       	mov	r16, r22
     6a4:	7c 01       	movw	r14, r24
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	ae 01       	movw	r20, r28
     6aa:	4f 5f       	subi	r20, 0xFF	; 255
     6ac:	5f 4f       	sbci	r21, 0xFF	; 255
     6ae:	6e e0       	ldi	r22, 0x0E	; 14
     6b0:	12 dd       	rcall	.-1500   	; 0xd6 <a_ds3231_iic_multiple_read>
     6b2:	88 23       	and	r24, r24
     6b4:	69 f0       	breq	.+26     	; 0x6d0 <ds3231_set_pin+0x4e>
     6b6:	8f e7       	ldi	r24, 0x7F	; 127
     6b8:	94 e0       	ldi	r25, 0x04	; 4
     6ba:	9f 93       	push	r25
     6bc:	8f 93       	push	r24
     6be:	d7 01       	movw	r26, r14
     6c0:	18 96       	adiw	r26, 0x08	; 8
     6c2:	ed 91       	ld	r30, X+
     6c4:	fc 91       	ld	r31, X
     6c6:	19 97       	sbiw	r26, 0x09	; 9
     6c8:	09 95       	icall
     6ca:	0f 90       	pop	r0
     6cc:	0f 90       	pop	r0
     6ce:	1e c0       	rjmp	.+60     	; 0x70c <ds3231_set_pin+0x8a>
     6d0:	49 81       	ldd	r20, Y+1	; 0x01
     6d2:	4b 7f       	andi	r20, 0xFB	; 251
     6d4:	60 2f       	mov	r22, r16
     6d6:	66 0f       	add	r22, r22
     6d8:	66 0f       	add	r22, r22
     6da:	46 2b       	or	r20, r22
     6dc:	49 83       	std	Y+1, r20	; 0x01
     6de:	6e e0       	ldi	r22, 0x0E	; 14
     6e0:	c7 01       	movw	r24, r14
     6e2:	de dc       	rcall	.-1604   	; 0xa0 <a_ds3231_iic_write>
     6e4:	88 23       	and	r24, r24
     6e6:	89 f0       	breq	.+34     	; 0x70a <ds3231_set_pin+0x88>
     6e8:	8d e9       	ldi	r24, 0x9D	; 157
     6ea:	94 e0       	ldi	r25, 0x04	; 4
     6ec:	9f 93       	push	r25
     6ee:	8f 93       	push	r24
     6f0:	d7 01       	movw	r26, r14
     6f2:	18 96       	adiw	r26, 0x08	; 8
     6f4:	ed 91       	ld	r30, X+
     6f6:	fc 91       	ld	r31, X
     6f8:	19 97       	sbiw	r26, 0x09	; 9
     6fa:	09 95       	icall
     6fc:	0f 90       	pop	r0
     6fe:	0f 90       	pop	r0
     700:	05 c0       	rjmp	.+10     	; 0x70c <ds3231_set_pin+0x8a>
     702:	12 e0       	ldi	r17, 0x02	; 2
     704:	03 c0       	rjmp	.+6      	; 0x70c <ds3231_set_pin+0x8a>
     706:	13 e0       	ldi	r17, 0x03	; 3
     708:	01 c0       	rjmp	.+2      	; 0x70c <ds3231_set_pin+0x8a>
     70a:	10 e0       	ldi	r17, 0x00	; 0
     70c:	81 2f       	mov	r24, r17
     70e:	0f 90       	pop	r0
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	1f 91       	pop	r17
     716:	0f 91       	pop	r16
     718:	ff 90       	pop	r15
     71a:	ef 90       	pop	r14
     71c:	08 95       	ret

0000071e <ds3231_set_square_wave>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	1f 92       	push	r1
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	00 97       	sbiw	r24, 0x00	; 0
     732:	b1 f1       	breq	.+108    	; 0x7a0 <ds3231_set_square_wave+0x82>
     734:	dc 01       	movw	r26, r24
     736:	1e 96       	adiw	r26, 0x0e	; 14
     738:	1c 91       	ld	r17, X
     73a:	11 30       	cpi	r17, 0x01	; 1
     73c:	99 f5       	brne	.+102    	; 0x7a4 <ds3231_set_square_wave+0x86>
     73e:	06 2f       	mov	r16, r22
     740:	7c 01       	movw	r14, r24
     742:	21 e0       	ldi	r18, 0x01	; 1
     744:	ae 01       	movw	r20, r28
     746:	4f 5f       	subi	r20, 0xFF	; 255
     748:	5f 4f       	sbci	r21, 0xFF	; 255
     74a:	6e e0       	ldi	r22, 0x0E	; 14
     74c:	c4 dc       	rcall	.-1656   	; 0xd6 <a_ds3231_iic_multiple_read>
     74e:	88 23       	and	r24, r24
     750:	69 f0       	breq	.+26     	; 0x76c <ds3231_set_square_wave+0x4e>
     752:	8f e7       	ldi	r24, 0x7F	; 127
     754:	94 e0       	ldi	r25, 0x04	; 4
     756:	9f 93       	push	r25
     758:	8f 93       	push	r24
     75a:	d7 01       	movw	r26, r14
     75c:	18 96       	adiw	r26, 0x08	; 8
     75e:	ed 91       	ld	r30, X+
     760:	fc 91       	ld	r31, X
     762:	19 97       	sbiw	r26, 0x09	; 9
     764:	09 95       	icall
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	1f c0       	rjmp	.+62     	; 0x7aa <ds3231_set_square_wave+0x8c>
     76c:	49 81       	ldd	r20, Y+1	; 0x01
     76e:	4f 7b       	andi	r20, 0xBF	; 191
     770:	b0 e4       	ldi	r27, 0x40	; 64
     772:	0b 9f       	mul	r16, r27
     774:	c0 01       	movw	r24, r0
     776:	11 24       	eor	r1, r1
     778:	48 2b       	or	r20, r24
     77a:	49 83       	std	Y+1, r20	; 0x01
     77c:	6e e0       	ldi	r22, 0x0E	; 14
     77e:	c7 01       	movw	r24, r14
     780:	8f dc       	rcall	.-1762   	; 0xa0 <a_ds3231_iic_write>
     782:	88 23       	and	r24, r24
     784:	89 f0       	breq	.+34     	; 0x7a8 <ds3231_set_square_wave+0x8a>
     786:	8d e9       	ldi	r24, 0x9D	; 157
     788:	94 e0       	ldi	r25, 0x04	; 4
     78a:	9f 93       	push	r25
     78c:	8f 93       	push	r24
     78e:	d7 01       	movw	r26, r14
     790:	18 96       	adiw	r26, 0x08	; 8
     792:	ed 91       	ld	r30, X+
     794:	fc 91       	ld	r31, X
     796:	19 97       	sbiw	r26, 0x09	; 9
     798:	09 95       	icall
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	05 c0       	rjmp	.+10     	; 0x7aa <ds3231_set_square_wave+0x8c>
     7a0:	12 e0       	ldi	r17, 0x02	; 2
     7a2:	03 c0       	rjmp	.+6      	; 0x7aa <ds3231_set_square_wave+0x8c>
     7a4:	13 e0       	ldi	r17, 0x03	; 3
     7a6:	01 c0       	rjmp	.+2      	; 0x7aa <ds3231_set_square_wave+0x8c>
     7a8:	10 e0       	ldi	r17, 0x00	; 0
     7aa:	81 2f       	mov	r24, r17
     7ac:	0f 90       	pop	r0
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
     7ba:	08 95       	ret

000007bc <ds3231_set_aging_offset>:
     7bc:	0f 93       	push	r16
     7be:	1f 93       	push	r17
     7c0:	cf 93       	push	r28
     7c2:	00 97       	sbiw	r24, 0x00	; 0
     7c4:	c1 f0       	breq	.+48     	; 0x7f6 <ds3231_set_aging_offset+0x3a>
     7c6:	dc 01       	movw	r26, r24
     7c8:	1e 96       	adiw	r26, 0x0e	; 14
     7ca:	cc 91       	ld	r28, X
     7cc:	c1 30       	cpi	r28, 0x01	; 1
     7ce:	a9 f4       	brne	.+42     	; 0x7fa <ds3231_set_aging_offset+0x3e>
     7d0:	46 2f       	mov	r20, r22
     7d2:	8c 01       	movw	r16, r24
     7d4:	60 e1       	ldi	r22, 0x10	; 16
     7d6:	64 dc       	rcall	.-1848   	; 0xa0 <a_ds3231_iic_write>
     7d8:	88 23       	and	r24, r24
     7da:	89 f0       	breq	.+34     	; 0x7fe <ds3231_set_aging_offset+0x42>
     7dc:	82 e1       	ldi	r24, 0x12	; 18
     7de:	95 e0       	ldi	r25, 0x05	; 5
     7e0:	9f 93       	push	r25
     7e2:	8f 93       	push	r24
     7e4:	d8 01       	movw	r26, r16
     7e6:	18 96       	adiw	r26, 0x08	; 8
     7e8:	ed 91       	ld	r30, X+
     7ea:	fc 91       	ld	r31, X
     7ec:	19 97       	sbiw	r26, 0x09	; 9
     7ee:	09 95       	icall
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	05 c0       	rjmp	.+10     	; 0x800 <ds3231_set_aging_offset+0x44>
     7f6:	c2 e0       	ldi	r28, 0x02	; 2
     7f8:	03 c0       	rjmp	.+6      	; 0x800 <ds3231_set_aging_offset+0x44>
     7fa:	c3 e0       	ldi	r28, 0x03	; 3
     7fc:	01 c0       	rjmp	.+2      	; 0x800 <ds3231_set_aging_offset+0x44>
     7fe:	c0 e0       	ldi	r28, 0x00	; 0
     800:	8c 2f       	mov	r24, r28
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	08 95       	ret

0000080a <ds3231_aging_offset_convert_to_register>:
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	00 97       	sbiw	r24, 0x00	; 0
     810:	81 f0       	breq	.+32     	; 0x832 <ds3231_aging_offset_convert_to_register+0x28>
     812:	fc 01       	movw	r30, r24
     814:	86 85       	ldd	r24, Z+14	; 0x0e
     816:	81 30       	cpi	r24, 0x01	; 1
     818:	71 f4       	brne	.+28     	; 0x836 <ds3231_aging_offset_convert_to_register+0x2c>
     81a:	e9 01       	movw	r28, r18
     81c:	cb 01       	movw	r24, r22
     81e:	ba 01       	movw	r22, r20
     820:	2f e8       	ldi	r18, 0x8F	; 143
     822:	32 ec       	ldi	r19, 0xC2	; 194
     824:	45 ef       	ldi	r20, 0xF5	; 245
     826:	5d e3       	ldi	r21, 0x3D	; 61
     828:	19 d3       	rcall	.+1586   	; 0xe5c <__divsf3>
     82a:	80 d3       	rcall	.+1792   	; 0xf2c <__fixsfsi>
     82c:	68 83       	st	Y, r22
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	03 c0       	rjmp	.+6      	; 0x838 <ds3231_aging_offset_convert_to_register+0x2e>
     832:	82 e0       	ldi	r24, 0x02	; 2
     834:	01 c0       	rjmp	.+2      	; 0x838 <ds3231_aging_offset_convert_to_register+0x2e>
     836:	83 e0       	ldi	r24, 0x03	; 3
     838:	df 91       	pop	r29
     83a:	cf 91       	pop	r28
     83c:	08 95       	ret

0000083e <ds3231_init>:
     83e:	ff 92       	push	r15
     840:	0f 93       	push	r16
     842:	1f 93       	push	r17
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	1f 92       	push	r1
     84a:	cd b7       	in	r28, 0x3d	; 61
     84c:	de b7       	in	r29, 0x3e	; 62
     84e:	00 97       	sbiw	r24, 0x00	; 0
     850:	09 f4       	brne	.+2      	; 0x854 <ds3231_init+0x16>
     852:	d1 c0       	rjmp	.+418    	; 0x9f6 <__stack+0xf7>
     854:	dc 01       	movw	r26, r24
     856:	18 96       	adiw	r26, 0x08	; 8
     858:	2d 91       	ld	r18, X+
     85a:	3c 91       	ld	r19, X
     85c:	19 97       	sbiw	r26, 0x09	; 9
     85e:	21 15       	cp	r18, r1
     860:	31 05       	cpc	r19, r1
     862:	09 f4       	brne	.+2      	; 0x866 <ds3231_init+0x28>
     864:	cc c0       	rjmp	.+408    	; 0x9fe <__stack+0xff>
     866:	8c 01       	movw	r16, r24
     868:	ed 91       	ld	r30, X+
     86a:	fc 91       	ld	r31, X
     86c:	30 97       	sbiw	r30, 0x00	; 0
     86e:	69 f4       	brne	.+26     	; 0x88a <ds3231_init+0x4c>
     870:	8d e4       	ldi	r24, 0x4D	; 77
     872:	95 e0       	ldi	r25, 0x05	; 5
     874:	9f 93       	push	r25
     876:	8f 93       	push	r24
     878:	f9 01       	movw	r30, r18
     87a:	09 95       	icall
     87c:	0f 90       	pop	r0
     87e:	0f 90       	pop	r0
     880:	0f 2e       	mov	r0, r31
     882:	f3 e0       	ldi	r31, 0x03	; 3
     884:	ff 2e       	mov	r15, r31
     886:	f0 2d       	mov	r31, r0
     888:	be c0       	rjmp	.+380    	; 0xa06 <__stack+0x107>
     88a:	dc 01       	movw	r26, r24
     88c:	12 96       	adiw	r26, 0x02	; 2
     88e:	8d 91       	ld	r24, X+
     890:	9c 91       	ld	r25, X
     892:	13 97       	sbiw	r26, 0x03	; 3
     894:	89 2b       	or	r24, r25
     896:	69 f4       	brne	.+26     	; 0x8b2 <ds3231_init+0x74>
     898:	88 e6       	ldi	r24, 0x68	; 104
     89a:	95 e0       	ldi	r25, 0x05	; 5
     89c:	9f 93       	push	r25
     89e:	8f 93       	push	r24
     8a0:	f9 01       	movw	r30, r18
     8a2:	09 95       	icall
     8a4:	0f 90       	pop	r0
     8a6:	0f 90       	pop	r0
     8a8:	0f 2e       	mov	r0, r31
     8aa:	f3 e0       	ldi	r31, 0x03	; 3
     8ac:	ff 2e       	mov	r15, r31
     8ae:	f0 2d       	mov	r31, r0
     8b0:	aa c0       	rjmp	.+340    	; 0xa06 <__stack+0x107>
     8b2:	d8 01       	movw	r26, r16
     8b4:	14 96       	adiw	r26, 0x04	; 4
     8b6:	8d 91       	ld	r24, X+
     8b8:	9c 91       	ld	r25, X
     8ba:	15 97       	sbiw	r26, 0x05	; 5
     8bc:	89 2b       	or	r24, r25
     8be:	69 f4       	brne	.+26     	; 0x8da <ds3231_init+0x9c>
     8c0:	85 e8       	ldi	r24, 0x85	; 133
     8c2:	95 e0       	ldi	r25, 0x05	; 5
     8c4:	9f 93       	push	r25
     8c6:	8f 93       	push	r24
     8c8:	f9 01       	movw	r30, r18
     8ca:	09 95       	icall
     8cc:	0f 90       	pop	r0
     8ce:	0f 90       	pop	r0
     8d0:	0f 2e       	mov	r0, r31
     8d2:	f3 e0       	ldi	r31, 0x03	; 3
     8d4:	ff 2e       	mov	r15, r31
     8d6:	f0 2d       	mov	r31, r0
     8d8:	96 c0       	rjmp	.+300    	; 0xa06 <__stack+0x107>
     8da:	d8 01       	movw	r26, r16
     8dc:	16 96       	adiw	r26, 0x06	; 6
     8de:	8d 91       	ld	r24, X+
     8e0:	9c 91       	ld	r25, X
     8e2:	17 97       	sbiw	r26, 0x07	; 7
     8e4:	89 2b       	or	r24, r25
     8e6:	69 f4       	brne	.+26     	; 0x902 <__stack+0x3>
     8e8:	81 ea       	ldi	r24, 0xA1	; 161
     8ea:	95 e0       	ldi	r25, 0x05	; 5
     8ec:	9f 93       	push	r25
     8ee:	8f 93       	push	r24
     8f0:	f9 01       	movw	r30, r18
     8f2:	09 95       	icall
     8f4:	0f 90       	pop	r0
     8f6:	0f 90       	pop	r0
     8f8:	0f 2e       	mov	r0, r31
     8fa:	f3 e0       	ldi	r31, 0x03	; 3
     8fc:	ff 2e       	mov	r15, r31
     8fe:	f0 2d       	mov	r31, r0
     900:	82 c0       	rjmp	.+260    	; 0xa06 <__stack+0x107>
     902:	d8 01       	movw	r26, r16
     904:	1c 96       	adiw	r26, 0x0c	; 12
     906:	8d 91       	ld	r24, X+
     908:	9c 91       	ld	r25, X
     90a:	1d 97       	sbiw	r26, 0x0d	; 13
     90c:	89 2b       	or	r24, r25
     90e:	69 f4       	brne	.+26     	; 0x92a <__stack+0x2b>
     910:	8c eb       	ldi	r24, 0xBC	; 188
     912:	95 e0       	ldi	r25, 0x05	; 5
     914:	9f 93       	push	r25
     916:	8f 93       	push	r24
     918:	f9 01       	movw	r30, r18
     91a:	09 95       	icall
     91c:	0f 90       	pop	r0
     91e:	0f 90       	pop	r0
     920:	0f 2e       	mov	r0, r31
     922:	f3 e0       	ldi	r31, 0x03	; 3
     924:	ff 2e       	mov	r15, r31
     926:	f0 2d       	mov	r31, r0
     928:	6e c0       	rjmp	.+220    	; 0xa06 <__stack+0x107>
     92a:	d8 01       	movw	r26, r16
     92c:	1a 96       	adiw	r26, 0x0a	; 10
     92e:	8d 91       	ld	r24, X+
     930:	9c 91       	ld	r25, X
     932:	1b 97       	sbiw	r26, 0x0b	; 11
     934:	89 2b       	or	r24, r25
     936:	69 f4       	brne	.+26     	; 0x952 <__stack+0x53>
     938:	87 ed       	ldi	r24, 0xD7	; 215
     93a:	95 e0       	ldi	r25, 0x05	; 5
     93c:	9f 93       	push	r25
     93e:	8f 93       	push	r24
     940:	f9 01       	movw	r30, r18
     942:	09 95       	icall
     944:	0f 90       	pop	r0
     946:	0f 90       	pop	r0
     948:	0f 2e       	mov	r0, r31
     94a:	f3 e0       	ldi	r31, 0x03	; 3
     94c:	ff 2e       	mov	r15, r31
     94e:	f0 2d       	mov	r31, r0
     950:	5a c0       	rjmp	.+180    	; 0xa06 <__stack+0x107>
     952:	09 95       	icall
     954:	f8 2e       	mov	r15, r24
     956:	88 23       	and	r24, r24
     958:	79 f0       	breq	.+30     	; 0x978 <__stack+0x79>
     95a:	8a ef       	ldi	r24, 0xFA	; 250
     95c:	95 e0       	ldi	r25, 0x05	; 5
     95e:	9f 93       	push	r25
     960:	8f 93       	push	r24
     962:	d8 01       	movw	r26, r16
     964:	18 96       	adiw	r26, 0x08	; 8
     966:	ed 91       	ld	r30, X+
     968:	fc 91       	ld	r31, X
     96a:	19 97       	sbiw	r26, 0x09	; 9
     96c:	09 95       	icall
     96e:	0f 90       	pop	r0
     970:	0f 90       	pop	r0
     972:	ff 24       	eor	r15, r15
     974:	f3 94       	inc	r15
     976:	47 c0       	rjmp	.+142    	; 0xa06 <__stack+0x107>
     978:	21 e0       	ldi	r18, 0x01	; 1
     97a:	ae 01       	movw	r20, r28
     97c:	4f 5f       	subi	r20, 0xFF	; 255
     97e:	5f 4f       	sbci	r21, 0xFF	; 255
     980:	6f e0       	ldi	r22, 0x0F	; 15
     982:	c8 01       	movw	r24, r16
     984:	a8 db       	rcall	.-2224   	; 0xd6 <a_ds3231_iic_multiple_read>
     986:	88 23       	and	r24, r24
     988:	a9 f0       	breq	.+42     	; 0x9b4 <__stack+0xb5>
     98a:	8c eb       	ldi	r24, 0xBC	; 188
     98c:	94 e0       	ldi	r25, 0x04	; 4
     98e:	9f 93       	push	r25
     990:	8f 93       	push	r24
     992:	d8 01       	movw	r26, r16
     994:	18 96       	adiw	r26, 0x08	; 8
     996:	ed 91       	ld	r30, X+
     998:	fc 91       	ld	r31, X
     99a:	19 97       	sbiw	r26, 0x09	; 9
     99c:	09 95       	icall
     99e:	d8 01       	movw	r26, r16
     9a0:	12 96       	adiw	r26, 0x02	; 2
     9a2:	ed 91       	ld	r30, X+
     9a4:	fc 91       	ld	r31, X
     9a6:	13 97       	sbiw	r26, 0x03	; 3
     9a8:	09 95       	icall
     9aa:	0f 90       	pop	r0
     9ac:	0f 90       	pop	r0
     9ae:	ff 24       	eor	r15, r15
     9b0:	f3 94       	inc	r15
     9b2:	29 c0       	rjmp	.+82     	; 0xa06 <__stack+0x107>
     9b4:	49 81       	ldd	r20, Y+1	; 0x01
     9b6:	4f 77       	andi	r20, 0x7F	; 127
     9b8:	49 83       	std	Y+1, r20	; 0x01
     9ba:	6f e0       	ldi	r22, 0x0F	; 15
     9bc:	c8 01       	movw	r24, r16
     9be:	70 db       	rcall	.-2336   	; 0xa0 <a_ds3231_iic_write>
     9c0:	88 23       	and	r24, r24
     9c2:	a9 f0       	breq	.+42     	; 0x9ee <__stack+0xef>
     9c4:	84 e1       	ldi	r24, 0x14	; 20
     9c6:	96 e0       	ldi	r25, 0x06	; 6
     9c8:	9f 93       	push	r25
     9ca:	8f 93       	push	r24
     9cc:	d8 01       	movw	r26, r16
     9ce:	18 96       	adiw	r26, 0x08	; 8
     9d0:	ed 91       	ld	r30, X+
     9d2:	fc 91       	ld	r31, X
     9d4:	19 97       	sbiw	r26, 0x09	; 9
     9d6:	09 95       	icall
     9d8:	d8 01       	movw	r26, r16
     9da:	12 96       	adiw	r26, 0x02	; 2
     9dc:	ed 91       	ld	r30, X+
     9de:	fc 91       	ld	r31, X
     9e0:	13 97       	sbiw	r26, 0x03	; 3
     9e2:	09 95       	icall
     9e4:	0f 90       	pop	r0
     9e6:	0f 90       	pop	r0
     9e8:	ff 24       	eor	r15, r15
     9ea:	f3 94       	inc	r15
     9ec:	0c c0       	rjmp	.+24     	; 0xa06 <__stack+0x107>
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	f8 01       	movw	r30, r16
     9f2:	86 87       	std	Z+14, r24	; 0x0e
     9f4:	08 c0       	rjmp	.+16     	; 0xa06 <__stack+0x107>
     9f6:	68 94       	set
     9f8:	ff 24       	eor	r15, r15
     9fa:	f1 f8       	bld	r15, 1
     9fc:	04 c0       	rjmp	.+8      	; 0xa06 <__stack+0x107>
     9fe:	0f 2e       	mov	r0, r31
     a00:	f3 e0       	ldi	r31, 0x03	; 3
     a02:	ff 2e       	mov	r15, r31
     a04:	f0 2d       	mov	r31, r0
     a06:	8f 2d       	mov	r24, r15
     a08:	0f 90       	pop	r0
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	1f 91       	pop	r17
     a10:	0f 91       	pop	r16
     a12:	ff 90       	pop	r15
     a14:	08 95       	ret

00000a16 <ds3231_deinit>:
     a16:	1f 93       	push	r17
     a18:	cf 93       	push	r28
     a1a:	df 93       	push	r29
     a1c:	00 97       	sbiw	r24, 0x00	; 0
     a1e:	c1 f0       	breq	.+48     	; 0xa50 <ds3231_deinit+0x3a>
     a20:	fc 01       	movw	r30, r24
     a22:	16 85       	ldd	r17, Z+14	; 0x0e
     a24:	11 30       	cpi	r17, 0x01	; 1
     a26:	b1 f4       	brne	.+44     	; 0xa54 <ds3231_deinit+0x3e>
     a28:	ec 01       	movw	r28, r24
     a2a:	02 80       	ldd	r0, Z+2	; 0x02
     a2c:	f3 81       	ldd	r31, Z+3	; 0x03
     a2e:	e0 2d       	mov	r30, r0
     a30:	09 95       	icall
     a32:	88 23       	and	r24, r24
     a34:	59 f0       	breq	.+22     	; 0xa4c <ds3231_deinit+0x36>
     a36:	82 e3       	ldi	r24, 0x32	; 50
     a38:	96 e0       	ldi	r25, 0x06	; 6
     a3a:	9f 93       	push	r25
     a3c:	8f 93       	push	r24
     a3e:	e8 85       	ldd	r30, Y+8	; 0x08
     a40:	f9 85       	ldd	r31, Y+9	; 0x09
     a42:	09 95       	icall
     a44:	0f 90       	pop	r0
     a46:	0f 90       	pop	r0
     a48:	81 2f       	mov	r24, r17
     a4a:	05 c0       	rjmp	.+10     	; 0xa56 <ds3231_deinit+0x40>
     a4c:	1e 86       	std	Y+14, r1	; 0x0e
     a4e:	03 c0       	rjmp	.+6      	; 0xa56 <ds3231_deinit+0x40>
     a50:	82 e0       	ldi	r24, 0x02	; 2
     a52:	01 c0       	rjmp	.+2      	; 0xa56 <ds3231_deinit+0x40>
     a54:	83 e0       	ldi	r24, 0x03	; 3
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	08 95       	ret

00000a5e <ds3231_set_32khz_output>:
 *            - 2 handle is NULL
 *            - 3 handle is not initialized
 * @note      none
 */
uint8_t ds3231_set_32khz_output(ds3231_handle_t *handle, ds3231_bool_t enable)
{
     a5e:	ef 92       	push	r14
     a60:	ff 92       	push	r15
     a62:	0f 93       	push	r16
     a64:	1f 93       	push	r17
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	1f 92       	push	r1
     a6c:	cd b7       	in	r28, 0x3d	; 61
     a6e:	de b7       	in	r29, 0x3e	; 62
    uint8_t res;
    uint8_t prev;
    
    if (handle == NULL)                                                                      /* check handle */
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	b1 f1       	breq	.+108    	; 0xae0 <ds3231_set_32khz_output+0x82>
    {
        return 2;                                                                            /* return error */
    }
    if (handle->inited != 1)                                                                 /* check handle initialization */
     a74:	dc 01       	movw	r26, r24
     a76:	1e 96       	adiw	r26, 0x0e	; 14
     a78:	1c 91       	ld	r17, X
     a7a:	11 30       	cpi	r17, 0x01	; 1
     a7c:	99 f5       	brne	.+102    	; 0xae4 <ds3231_set_32khz_output+0x86>
     a7e:	06 2f       	mov	r16, r22
     a80:	7c 01       	movw	r14, r24
    {
        return 3;                                                                            /* return error */
    }
    
    res = a_ds3231_iic_multiple_read(handle, DS3231_REG_STATUS, (uint8_t *)&prev, 1);        /* multiple read */
     a82:	21 e0       	ldi	r18, 0x01	; 1
     a84:	ae 01       	movw	r20, r28
     a86:	4f 5f       	subi	r20, 0xFF	; 255
     a88:	5f 4f       	sbci	r21, 0xFF	; 255
     a8a:	6f e0       	ldi	r22, 0x0F	; 15
     a8c:	24 db       	rcall	.-2488   	; 0xd6 <a_ds3231_iic_multiple_read>
    if (res != 0)                                                                            /* check result */
     a8e:	88 23       	and	r24, r24
     a90:	69 f0       	breq	.+26     	; 0xaac <ds3231_set_32khz_output+0x4e>
    {
        handle->debug_print("ds3231: read status failed.\n");                                /* read status failed */
     a92:	8c eb       	ldi	r24, 0xBC	; 188
     a94:	94 e0       	ldi	r25, 0x04	; 4
     a96:	9f 93       	push	r25
     a98:	8f 93       	push	r24
     a9a:	d7 01       	movw	r26, r14
     a9c:	18 96       	adiw	r26, 0x08	; 8
     a9e:	ed 91       	ld	r30, X+
     aa0:	fc 91       	ld	r31, X
     aa2:	19 97       	sbiw	r26, 0x09	; 9
     aa4:	09 95       	icall
        
        return 1;                                                                            /* return error */
     aa6:	0f 90       	pop	r0
     aa8:	0f 90       	pop	r0
     aaa:	1f c0       	rjmp	.+62     	; 0xaea <ds3231_set_32khz_output+0x8c>
    }
    prev &= ~(1 << 3);                                                                       /* clear config */
    prev |= enable << 3;                                                                     /* set enable */
     aac:	49 81       	ldd	r20, Y+1	; 0x01
     aae:	47 7f       	andi	r20, 0xF7	; 247
     ab0:	60 2f       	mov	r22, r16
     ab2:	66 0f       	add	r22, r22
     ab4:	66 0f       	add	r22, r22
     ab6:	66 0f       	add	r22, r22
     ab8:	46 2b       	or	r20, r22
     aba:	49 83       	std	Y+1, r20	; 0x01
    res = a_ds3231_iic_write(handle, DS3231_REG_STATUS, prev);                               /* write status */
     abc:	6f e0       	ldi	r22, 0x0F	; 15
     abe:	c7 01       	movw	r24, r14
     ac0:	ef da       	rcall	.-2594   	; 0xa0 <a_ds3231_iic_write>
    if (res != 0)                                                                            /* check result */
     ac2:	88 23       	and	r24, r24
     ac4:	89 f0       	breq	.+34     	; 0xae8 <ds3231_set_32khz_output+0x8a>
    {
        handle->debug_print("ds3231: write status failed.\n");                               /* write status failed */
     ac6:	84 e1       	ldi	r24, 0x14	; 20
     ac8:	96 e0       	ldi	r25, 0x06	; 6
     aca:	9f 93       	push	r25
     acc:	8f 93       	push	r24
     ace:	d7 01       	movw	r26, r14
     ad0:	18 96       	adiw	r26, 0x08	; 8
     ad2:	ed 91       	ld	r30, X+
     ad4:	fc 91       	ld	r31, X
     ad6:	19 97       	sbiw	r26, 0x09	; 9
     ad8:	09 95       	icall
        
        return 1;                                                                            /* return error */
     ada:	0f 90       	pop	r0
     adc:	0f 90       	pop	r0
     ade:	05 c0       	rjmp	.+10     	; 0xaea <ds3231_set_32khz_output+0x8c>
    uint8_t res;
    uint8_t prev;
    
    if (handle == NULL)                                                                      /* check handle */
    {
        return 2;                                                                            /* return error */
     ae0:	12 e0       	ldi	r17, 0x02	; 2
     ae2:	03 c0       	rjmp	.+6      	; 0xaea <ds3231_set_32khz_output+0x8c>
    }
    if (handle->inited != 1)                                                                 /* check handle initialization */
    {
        return 3;                                                                            /* return error */
     ae4:	13 e0       	ldi	r17, 0x03	; 3
     ae6:	01 c0       	rjmp	.+2      	; 0xaea <ds3231_set_32khz_output+0x8c>
        handle->debug_print("ds3231: write status failed.\n");                               /* write status failed */
        
        return 1;                                                                            /* return error */
    }
    
    return 0;                                                                                /* success return 0 */
     ae8:	10 e0       	ldi	r17, 0x00	; 0
}
     aea:	81 2f       	mov	r24, r17
     aec:	0f 90       	pop	r0
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	1f 91       	pop	r17
     af4:	0f 91       	pop	r16
     af6:	ff 90       	pop	r15
     af8:	ef 90       	pop	r14
     afa:	08 95       	ret

00000afc <ds3231_basic_init>:
    }
    else
    {
        return 0;
    }
}
     afc:	cf 93       	push	r28
     afe:	df 93       	push	r29
     b00:	1f 92       	push	r1
     b02:	cd b7       	in	r28, 0x3d	; 61
     b04:	de b7       	in	r29, 0x3e	; 62
     b06:	e0 ef       	ldi	r30, 0xF0	; 240
     b08:	f7 e0       	ldi	r31, 0x07	; 7
     b0a:	8f e0       	ldi	r24, 0x0F	; 15
     b0c:	df 01       	movw	r26, r30
     b0e:	1d 92       	st	X+, r1
     b10:	8a 95       	dec	r24
     b12:	e9 f7       	brne	.-6      	; 0xb0e <ds3231_basic_init+0x12>
     b14:	89 e5       	ldi	r24, 0x59	; 89
     b16:	96 e0       	ldi	r25, 0x06	; 6
     b18:	91 83       	std	Z+1, r25	; 0x01
     b1a:	80 83       	st	Z, r24
     b1c:	80 e6       	ldi	r24, 0x60	; 96
     b1e:	96 e0       	ldi	r25, 0x06	; 6
     b20:	93 83       	std	Z+3, r25	; 0x03
     b22:	82 83       	std	Z+2, r24	; 0x02
     b24:	82 e6       	ldi	r24, 0x62	; 98
     b26:	96 e0       	ldi	r25, 0x06	; 6
     b28:	97 83       	std	Z+7, r25	; 0x07
     b2a:	86 83       	std	Z+6, r24	; 0x06
     b2c:	87 e9       	ldi	r24, 0x97	; 151
     b2e:	96 e0       	ldi	r25, 0x06	; 6
     b30:	95 83       	std	Z+5, r25	; 0x05
     b32:	84 83       	std	Z+4, r24	; 0x04
     b34:	87 ea       	ldi	r24, 0xA7	; 167
     b36:	96 e0       	ldi	r25, 0x06	; 6
     b38:	95 87       	std	Z+13, r25	; 0x0d
     b3a:	84 87       	std	Z+12, r24	; 0x0c
     b3c:	88 ea       	ldi	r24, 0xA8	; 168
     b3e:	96 e0       	ldi	r25, 0x06	; 6
     b40:	91 87       	std	Z+9, r25	; 0x09
     b42:	80 87       	std	Z+8, r24	; 0x08
     b44:	8f ea       	ldi	r24, 0xAF	; 175
     b46:	96 e0       	ldi	r25, 0x06	; 6
     b48:	93 87       	std	Z+11, r25	; 0x0b
     b4a:	82 87       	std	Z+10, r24	; 0x0a
     b4c:	cf 01       	movw	r24, r30
     b4e:	77 de       	rcall	.-786    	; 0x83e <ds3231_init>
     b50:	88 23       	and	r24, r24
     b52:	49 f0       	breq	.+18     	; 0xb66 <ds3231_basic_init+0x6a>
     b54:	8b e7       	ldi	r24, 0x7B	; 123
     b56:	96 e0       	ldi	r25, 0x06	; 6
     b58:	9f 93       	push	r25
     b5a:	8f 93       	push	r24
     b5c:	f9 d0       	rcall	.+498    	; 0xd50 <ds3231_interface_debug_print>
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	81 e0       	ldi	r24, 0x01	; 1
     b64:	98 c0       	rjmp	.+304    	; 0xc96 <ds3231_basic_init+0x19a>
     b66:	61 e0       	ldi	r22, 0x01	; 1
     b68:	80 ef       	ldi	r24, 0xF0	; 240
     b6a:	97 e0       	ldi	r25, 0x07	; 7
     b6c:	da dc       	rcall	.-1612   	; 0x522 <ds3231_set_oscillator>
     b6e:	88 23       	and	r24, r24
     b70:	61 f0       	breq	.+24     	; 0xb8a <ds3231_basic_init+0x8e>
     b72:	81 e9       	ldi	r24, 0x91	; 145
     b74:	96 e0       	ldi	r25, 0x06	; 6
     b76:	9f 93       	push	r25
     b78:	8f 93       	push	r24
     b7a:	ea d0       	rcall	.+468    	; 0xd50 <ds3231_interface_debug_print>
     b7c:	80 ef       	ldi	r24, 0xF0	; 240
     b7e:	97 e0       	ldi	r25, 0x07	; 7
     b80:	4a df       	rcall	.-364    	; 0xa16 <ds3231_deinit>
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	86 c0       	rjmp	.+268    	; 0xc96 <ds3231_basic_init+0x19a>
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	60 e0       	ldi	r22, 0x00	; 0
     b8e:	80 ef       	ldi	r24, 0xF0	; 240
     b90:	97 e0       	ldi	r25, 0x07	; 7
     b92:	17 dd       	rcall	.-1490   	; 0x5c2 <ds3231_set_alarm_interrupt>
     b94:	88 23       	and	r24, r24
     b96:	61 f0       	breq	.+24     	; 0xbb0 <ds3231_basic_init+0xb4>
     b98:	81 eb       	ldi	r24, 0xB1	; 177
     b9a:	96 e0       	ldi	r25, 0x06	; 6
     b9c:	9f 93       	push	r25
     b9e:	8f 93       	push	r24
     ba0:	d7 d0       	rcall	.+430    	; 0xd50 <ds3231_interface_debug_print>
     ba2:	80 ef       	ldi	r24, 0xF0	; 240
     ba4:	97 e0       	ldi	r25, 0x07	; 7
     ba6:	37 df       	rcall	.-402    	; 0xa16 <ds3231_deinit>
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	81 e0       	ldi	r24, 0x01	; 1
     bae:	73 c0       	rjmp	.+230    	; 0xc96 <ds3231_basic_init+0x19a>
     bb0:	40 e0       	ldi	r20, 0x00	; 0
     bb2:	61 e0       	ldi	r22, 0x01	; 1
     bb4:	80 ef       	ldi	r24, 0xF0	; 240
     bb6:	97 e0       	ldi	r25, 0x07	; 7
     bb8:	04 dd       	rcall	.-1528   	; 0x5c2 <ds3231_set_alarm_interrupt>
     bba:	88 23       	and	r24, r24
     bbc:	61 f0       	breq	.+24     	; 0xbd6 <ds3231_basic_init+0xda>
     bbe:	87 ed       	ldi	r24, 0xD7	; 215
     bc0:	96 e0       	ldi	r25, 0x06	; 6
     bc2:	9f 93       	push	r25
     bc4:	8f 93       	push	r24
     bc6:	c4 d0       	rcall	.+392    	; 0xd50 <ds3231_interface_debug_print>
     bc8:	80 ef       	ldi	r24, 0xF0	; 240
     bca:	97 e0       	ldi	r25, 0x07	; 7
     bcc:	24 df       	rcall	.-440    	; 0xa16 <ds3231_deinit>
     bce:	0f 90       	pop	r0
     bd0:	0f 90       	pop	r0
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	60 c0       	rjmp	.+192    	; 0xc96 <ds3231_basic_init+0x19a>
     bd6:	60 e0       	ldi	r22, 0x00	; 0
     bd8:	80 ef       	ldi	r24, 0xF0	; 240
     bda:	97 e0       	ldi	r25, 0x07	; 7
     bdc:	52 dd       	rcall	.-1372   	; 0x682 <ds3231_set_pin>
     bde:	88 23       	and	r24, r24
     be0:	61 f0       	breq	.+24     	; 0xbfa <ds3231_basic_init+0xfe>
     be2:	8d ef       	ldi	r24, 0xFD	; 253
     be4:	96 e0       	ldi	r25, 0x06	; 6
     be6:	9f 93       	push	r25
     be8:	8f 93       	push	r24
     bea:	b2 d0       	rcall	.+356    	; 0xd50 <ds3231_interface_debug_print>
     bec:	80 ef       	ldi	r24, 0xF0	; 240
     bee:	97 e0       	ldi	r25, 0x07	; 7
     bf0:	12 df       	rcall	.-476    	; 0xa16 <ds3231_deinit>
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	4e c0       	rjmp	.+156    	; 0xc96 <ds3231_basic_init+0x19a>
     bfa:	60 e0       	ldi	r22, 0x00	; 0
     bfc:	80 ef       	ldi	r24, 0xF0	; 240
     bfe:	97 e0       	ldi	r25, 0x07	; 7
     c00:	8e dd       	rcall	.-1252   	; 0x71e <ds3231_set_square_wave>
     c02:	88 23       	and	r24, r24
     c04:	61 f0       	breq	.+24     	; 0xc1e <ds3231_basic_init+0x122>
     c06:	86 e1       	ldi	r24, 0x16	; 22
     c08:	97 e0       	ldi	r25, 0x07	; 7
     c0a:	9f 93       	push	r25
     c0c:	8f 93       	push	r24
     c0e:	a0 d0       	rcall	.+320    	; 0xd50 <ds3231_interface_debug_print>
     c10:	80 ef       	ldi	r24, 0xF0	; 240
     c12:	97 e0       	ldi	r25, 0x07	; 7
     c14:	00 df       	rcall	.-512    	; 0xa16 <ds3231_deinit>
     c16:	0f 90       	pop	r0
     c18:	0f 90       	pop	r0
     c1a:	81 e0       	ldi	r24, 0x01	; 1
     c1c:	3c c0       	rjmp	.+120    	; 0xc96 <ds3231_basic_init+0x19a>
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	80 ef       	ldi	r24, 0xF0	; 240
     c22:	97 e0       	ldi	r25, 0x07	; 7
     c24:	1c df       	rcall	.-456    	; 0xa5e <ds3231_set_32khz_output>
     c26:	88 23       	and	r24, r24
     c28:	61 f0       	breq	.+24     	; 0xc42 <ds3231_basic_init+0x146>
     c2a:	87 e3       	ldi	r24, 0x37	; 55
     c2c:	97 e0       	ldi	r25, 0x07	; 7
     c2e:	9f 93       	push	r25
     c30:	8f 93       	push	r24
     c32:	8e d0       	rcall	.+284    	; 0xd50 <ds3231_interface_debug_print>
     c34:	80 ef       	ldi	r24, 0xF0	; 240
     c36:	97 e0       	ldi	r25, 0x07	; 7
     c38:	ee de       	rcall	.-548    	; 0xa16 <ds3231_deinit>
     c3a:	0f 90       	pop	r0
     c3c:	0f 90       	pop	r0
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	2a c0       	rjmp	.+84     	; 0xc96 <ds3231_basic_init+0x19a>
     c42:	9e 01       	movw	r18, r28
     c44:	2f 5f       	subi	r18, 0xFF	; 255
     c46:	3f 4f       	sbci	r19, 0xFF	; 255
     c48:	40 e0       	ldi	r20, 0x00	; 0
     c4a:	50 e0       	ldi	r21, 0x00	; 0
     c4c:	ba 01       	movw	r22, r20
     c4e:	80 ef       	ldi	r24, 0xF0	; 240
     c50:	97 e0       	ldi	r25, 0x07	; 7
     c52:	db dd       	rcall	.-1098   	; 0x80a <ds3231_aging_offset_convert_to_register>
     c54:	88 23       	and	r24, r24
     c56:	61 f0       	breq	.+24     	; 0xc70 <ds3231_basic_init+0x174>
     c58:	89 e5       	ldi	r24, 0x59	; 89
     c5a:	97 e0       	ldi	r25, 0x07	; 7
     c5c:	9f 93       	push	r25
     c5e:	8f 93       	push	r24
     c60:	77 d0       	rcall	.+238    	; 0xd50 <ds3231_interface_debug_print>
     c62:	80 ef       	ldi	r24, 0xF0	; 240
     c64:	97 e0       	ldi	r25, 0x07	; 7
     c66:	d7 de       	rcall	.-594    	; 0xa16 <ds3231_deinit>
     c68:	0f 90       	pop	r0
     c6a:	0f 90       	pop	r0
     c6c:	81 e0       	ldi	r24, 0x01	; 1
     c6e:	13 c0       	rjmp	.+38     	; 0xc96 <ds3231_basic_init+0x19a>
     c70:	69 81       	ldd	r22, Y+1	; 0x01
     c72:	80 ef       	ldi	r24, 0xF0	; 240
     c74:	97 e0       	ldi	r25, 0x07	; 7
     c76:	a2 dd       	rcall	.-1212   	; 0x7bc <ds3231_set_aging_offset>
     c78:	88 23       	and	r24, r24
     c7a:	61 f0       	breq	.+24     	; 0xc94 <ds3231_basic_init+0x198>
     c7c:	8e e7       	ldi	r24, 0x7E	; 126
     c7e:	97 e0       	ldi	r25, 0x07	; 7
     c80:	9f 93       	push	r25
     c82:	8f 93       	push	r24
     c84:	65 d0       	rcall	.+202    	; 0xd50 <ds3231_interface_debug_print>
     c86:	80 ef       	ldi	r24, 0xF0	; 240
     c88:	97 e0       	ldi	r25, 0x07	; 7
     c8a:	c5 de       	rcall	.-630    	; 0xa16 <ds3231_deinit>
     c8c:	0f 90       	pop	r0
     c8e:	0f 90       	pop	r0
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	01 c0       	rjmp	.+2      	; 0xc96 <ds3231_basic_init+0x19a>
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	0f 90       	pop	r0
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	08 95       	ret

00000c9e <ds3231_basic_set_time>:
 * @note      none
 */
uint8_t ds3231_basic_set_time(ds3231_time_t *t)
{
    /* set time */
    if (ds3231_set_time(&gs_handle, t) != 0)
     c9e:	bc 01       	movw	r22, r24
     ca0:	80 ef       	ldi	r24, 0xF0	; 240
     ca2:	97 e0       	ldi	r25, 0x07	; 7
     ca4:	39 da       	rcall	.-2958   	; 0x118 <ds3231_set_time>
     ca6:	91 e0       	ldi	r25, 0x01	; 1
     ca8:	81 11       	cpse	r24, r1
     caa:	01 c0       	rjmp	.+2      	; 0xcae <ds3231_basic_set_time+0x10>
     cac:	90 e0       	ldi	r25, 0x00	; 0
    }
    else
    {
		return 0;
    }
}
     cae:	89 2f       	mov	r24, r25
     cb0:	08 95       	ret

00000cb2 <ds3231_interface_iic_init>:
 * @note   none
 */
uint8_t ds3231_interface_iic_init(void)
{
	/* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
	TWSR = 0;                         /* no prescaler */
     cb2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWBR = ((F_CPU/SCL_CLOCK)-16)/2;  /* must be > 10 for stable operation */
     cb6:	88 e4       	ldi	r24, 0x48	; 72
     cb8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>

    return 0;
}
     cbc:	80 e0       	ldi	r24, 0x00	; 0
     cbe:	08 95       	ret

00000cc0 <ds3231_interface_iic_deinit>:
 */
uint8_t ds3231_interface_iic_deinit(void)
{
	
    return 0;
}
     cc0:	80 e0       	ldi	r24, 0x00	; 0
     cc2:	08 95       	ret

00000cc4 <ds3231_interface_iic_read>:
 *             - 0 success
 *             - 1 read failed
 * @note       none
 */
uint8_t ds3231_interface_iic_read(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
     cc4:	af 92       	push	r10
     cc6:	bf 92       	push	r11
     cc8:	cf 92       	push	r12
     cca:	df 92       	push	r13
     ccc:	ef 92       	push	r14
     cce:	ff 92       	push	r15
     cd0:	0f 93       	push	r16
     cd2:	1f 93       	push	r17
     cd4:	cf 93       	push	r28
     cd6:	df 93       	push	r29
	for (uint8_t i = 0; i < len; i++)
     cd8:	21 15       	cp	r18, r1
     cda:	31 05       	cpc	r19, r1
     cdc:	e1 f0       	breq	.+56     	; 0xd16 <ds3231_interface_iic_read+0x52>
     cde:	79 01       	movw	r14, r18
     ce0:	6a 01       	movw	r12, r20
     ce2:	b6 2e       	mov	r11, r22
	{
		i2c_rep_start((addr<<1)+I2C_WRITE);
     ce4:	08 2f       	mov	r16, r24
     ce6:	00 0f       	add	r16, r16
		i2c_write(reg);
		/* Send START condition with SLA+R */
		i2c_rep_start((addr<<1)+I2C_READ);
     ce8:	aa 24       	eor	r10, r10
     cea:	a3 94       	inc	r10
     cec:	a0 0e       	add	r10, r16
     cee:	16 2f       	mov	r17, r22
     cf0:	c0 e0       	ldi	r28, 0x00	; 0
     cf2:	d0 e0       	ldi	r29, 0x00	; 0
 */
uint8_t ds3231_interface_iic_read(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
	for (uint8_t i = 0; i < len; i++)
	{
		i2c_rep_start((addr<<1)+I2C_WRITE);
     cf4:	80 2f       	mov	r24, r16
     cf6:	5b d0       	rcall	.+182    	; 0xdae <i2c_rep_start>
		i2c_write(reg);
     cf8:	81 2f       	mov	r24, r17
     cfa:	5b d0       	rcall	.+182    	; 0xdb2 <i2c_write>
		/* Send START condition with SLA+R */
		i2c_rep_start((addr<<1)+I2C_READ);
     cfc:	8a 2d       	mov	r24, r10
     cfe:	57 d0       	rcall	.+174    	; 0xdae <i2c_rep_start>
		/* Receive data */
		buf[i] = i2c_readNak();
     d00:	cc 0d       	add	r28, r12
     d02:	dd 1d       	adc	r29, r13
     d04:	68 d0       	rcall	.+208    	; 0xdd6 <i2c_readNak>
     d06:	88 83       	st	Y, r24
     d08:	1f 5f       	subi	r17, 0xFF	; 255
		reg += 1;
     d0a:	c1 2f       	mov	r28, r17
 *             - 1 read failed
 * @note       none
 */
uint8_t ds3231_interface_iic_read(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
	for (uint8_t i = 0; i < len; i++)
     d0c:	cb 19       	sub	r28, r11
     d0e:	d0 e0       	ldi	r29, 0x00	; 0
     d10:	ce 15       	cp	r28, r14
     d12:	df 05       	cpc	r29, r15
     d14:	78 f3       	brcs	.-34     	; 0xcf4 <ds3231_interface_iic_read+0x30>
     d16:	80 e0       	ldi	r24, 0x00	; 0
		/* Receive data */
		buf[i] = i2c_readNak();
		reg += 1;
	}
    return 0;
}
     d18:	df 91       	pop	r29
     d1a:	cf 91       	pop	r28
     d1c:	1f 91       	pop	r17
     d1e:	0f 91       	pop	r16
     d20:	ff 90       	pop	r15
     d22:	ef 90       	pop	r14
     d24:	df 90       	pop	r13
     d26:	cf 90       	pop	r12
     d28:	bf 90       	pop	r11
     d2a:	af 90       	pop	r10
     d2c:	08 95       	ret

00000d2e <ds3231_interface_iic_write>:
     d2e:	1f 93       	push	r17
 *            - 0 success
 *            - 1 write failed
 * @note      none
 */
uint8_t ds3231_interface_iic_write(uint8_t addr, uint8_t reg, uint8_t *buf, uint16_t len)
{
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	16 2f       	mov	r17, r22
     d36:	ea 01       	movw	r28, r20
	i2c_rep_start((addr<<1)+I2C_WRITE);
     d38:	88 0f       	add	r24, r24
     d3a:	39 d0       	rcall	.+114    	; 0xdae <i2c_rep_start>
	i2c_write(reg);
     d3c:	81 2f       	mov	r24, r17
     d3e:	39 d0       	rcall	.+114    	; 0xdb2 <i2c_write>
	/* Write data */
	i2c_write(*buf);
     d40:	88 81       	ld	r24, Y
     d42:	37 d0       	rcall	.+110    	; 0xdb2 <i2c_write>
     d44:	80 e0       	ldi	r24, 0x00	; 0
	
    return 0;
}
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	08 95       	ret

00000d4e <ds3231_interface_delay_ms>:
     d4e:	08 95       	ret

00000d50 <ds3231_interface_debug_print>:
 * @brief     interface print format data
 * @param[in] fmt is the format data
 * @note      none
 */
void ds3231_interface_debug_print(const char *const fmt, ...)
{
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	cd b7       	in	r28, 0x3d	; 61
     d56:	de b7       	in	r29, 0x3e	; 62

}
     d58:	df 91       	pop	r29
     d5a:	cf 91       	pop	r28
     d5c:	08 95       	ret

00000d5e <ds3231_interface_receive_callback>:
 * @brief     interface receive callback
 * @param[in] type is the interrupt type
 * @note      none
 */
void ds3231_interface_receive_callback(uint8_t type)
{
     d5e:	08 95       	ret

00000d60 <i2c_start>:
		if( twst == TW_SR_DATA_ACK)
		{
			return TWDR;
		}
	}
}
     d60:	94 ea       	ldi	r25, 0xA4	; 164
     d62:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d66:	ec eb       	ldi	r30, 0xBC	; 188
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	90 81       	ld	r25, Z
     d6c:	99 23       	and	r25, r25
     d6e:	ec f7       	brge	.-6      	; 0xd6a <i2c_start+0xa>
     d70:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     d74:	98 7f       	andi	r25, 0xF8	; 248
     d76:	98 30       	cpi	r25, 0x08	; 8
     d78:	11 f0       	breq	.+4      	; 0xd7e <i2c_start+0x1e>
     d7a:	90 31       	cpi	r25, 0x10	; 16
     d7c:	a1 f4       	brne	.+40     	; 0xda6 <i2c_start+0x46>
     d7e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     d82:	84 e8       	ldi	r24, 0x84	; 132
     d84:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     d88:	ec eb       	ldi	r30, 0xBC	; 188
     d8a:	f0 e0       	ldi	r31, 0x00	; 0
     d8c:	80 81       	ld	r24, Z
     d8e:	88 23       	and	r24, r24
     d90:	ec f7       	brge	.-6      	; 0xd8c <i2c_start+0x2c>
     d92:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     d96:	98 7f       	andi	r25, 0xF8	; 248
     d98:	98 31       	cpi	r25, 0x18	; 24
     d9a:	39 f0       	breq	.+14     	; 0xdaa <i2c_start+0x4a>
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	90 34       	cpi	r25, 0x40	; 64
     da0:	29 f4       	brne	.+10     	; 0xdac <i2c_start+0x4c>
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	08 95       	ret
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	08 95       	ret
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	08 95       	ret

00000dae <i2c_rep_start>:
     dae:	d8 cf       	rjmp	.-80     	; 0xd60 <i2c_start>
     db0:	08 95       	ret

00000db2 <i2c_write>:
     db2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     db6:	84 e8       	ldi	r24, 0x84	; 132
     db8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dbc:	ec eb       	ldi	r30, 0xBC	; 188
     dbe:	f0 e0       	ldi	r31, 0x00	; 0
     dc0:	80 81       	ld	r24, Z
     dc2:	88 23       	and	r24, r24
     dc4:	ec f7       	brge	.-6      	; 0xdc0 <i2c_write+0xe>
     dc6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     dca:	98 7f       	andi	r25, 0xF8	; 248
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	98 32       	cpi	r25, 0x28	; 40
     dd0:	09 f4       	brne	.+2      	; 0xdd4 <i2c_write+0x22>
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	08 95       	ret

00000dd6 <i2c_readNak>:
Outputs:	Data received from I2C device
Description:Receives and returns the data from I2C device.
******************************************************************** */
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     dd6:	84 e8       	ldi	r24, 0x84	; 132
     dd8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
     ddc:	ec eb       	ldi	r30, 0xBC	; 188
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	88 23       	and	r24, r24
     de4:	ec f7       	brge	.-6      	; 0xde0 <i2c_readNak+0xa>
	
	return TWDR;
     de6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     dea:	08 95       	ret

00000dec <init_LED>:

#include "LED.h"

void init_LED(void)
{
	LED_DDR |= (1<<LED_pin); //set pins as outputs
     dec:	56 9a       	sbi	0x0a, 6	; 10
     dee:	08 95       	ret

00000df0 <main>:
#include "LED.h"

#define WRITETIME 1
#define LCDPRESENT 0
int main (void)
{
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	cd b7       	in	r28, 0x3d	; 61
     df6:	de b7       	in	r29, 0x3e	; 62
     df8:	2a 97       	sbiw	r28, 0x0a	; 10
     dfa:	0f b6       	in	r0, 0x3f	; 63
     dfc:	f8 94       	cli
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	0f be       	out	0x3f, r0	; 63
     e02:	cd bf       	out	0x3d, r28	; 61
	ds3231_basic_init();
     e04:	7b de       	rcall	.-778    	; 0xafc <ds3231_basic_init>
#if LCDPRESENT
	initLCD();
	ds3231_time_t t;
#else
	init_LED();
     e06:	f2 df       	rcall	.-28     	; 0xdec <init_LED>
     e08:	81 e0       	ldi	r24, 0x01	; 1

#if WRITETIME
	/* Set time */
	ds3231_time_t setT;
	uint8_t setTime_b = 0;
	setT.am_pm = DS3231_PM;
     e0a:	8a 87       	std	Y+10, r24	; 0x0a
     e0c:	92 e0       	ldi	r25, 0x02	; 2
	setT.date = 02;		/* Between 1 - 31 */
     e0e:	9d 83       	std	Y+5, r25	; 0x05
     e10:	19 86       	std	Y+9, r1	; 0x09
	setT.format = DS3231_FORMAT_24H;
     e12:	97 e1       	ldi	r25, 0x17	; 23
	setT.hour = 23;		/* Between 0 - 23 / 0-11 in case of 12h time format */
     e14:	9e 83       	std	Y+6, r25	; 0x06
     e16:	98 e3       	ldi	r25, 0x38	; 56
	setT.minute = 56;	/* Between 0 - 59 */
     e18:	9f 83       	std	Y+7, r25	; 0x07
     e1a:	94 e0       	ldi	r25, 0x04	; 4
	setT.month = 04;	/* Between 1 - 12 */
     e1c:	9b 83       	std	Y+3, r25	; 0x03
     e1e:	18 86       	std	Y+8, r1	; 0x08
	setT.second = 0;	/* Between 0 - 59 */
     e20:	8c 83       	std	Y+4, r24	; 0x04
	setT.week  = 1;		/* Between 1 - 7 */
     e22:	87 ee       	ldi	r24, 0xE7	; 231
	setT.year = 2023;	/* Between 1900 - 2190 */
     e24:	97 e0       	ldi	r25, 0x07	; 7
     e26:	9a 83       	std	Y+2, r25	; 0x02
     e28:	89 83       	std	Y+1, r24	; 0x01
     e2a:	ce 01       	movw	r24, r28
	
	/* Write time to module */
	ds3231_basic_set_time(&setT);
     e2c:	01 96       	adiw	r24, 0x01	; 1
     e2e:	37 df       	rcall	.-402    	; 0xc9e <ds3231_basic_set_time>
     e30:	5e 9a       	sbi	0x0b, 6	; 11
	if (!setTime_b)
	{
#if LCDPRESENT
		displayLCD_main(1, "Time set successfully.", NONE, "NONE");
#else
		set_LED_high; 
     e32:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     e34:	81 ee       	ldi	r24, 0xE1	; 225
     e36:	94 e0       	ldi	r25, 0x04	; 4
     e38:	21 50       	subi	r18, 0x01	; 1
     e3a:	80 40       	sbci	r24, 0x00	; 0
     e3c:	90 40       	sbci	r25, 0x00	; 0
     e3e:	e1 f7       	brne	.-8      	; 0xe38 <main+0x48>
     e40:	00 c0       	rjmp	.+0      	; 0xe42 <main+0x52>
     e42:	00 00       	nop
     e44:	5e 98       	cbi	0x0b, 6	; 11
		_delay_ms(100); 
		turnOff_LED;
     e46:	80 e0       	ldi	r24, 0x00	; 0
		displayLCD_main(3, "Minute:", t.minute, "NONE");
		displayLCD_main(4, "Second:", t.second, "NONE");
	 }
#endif
	return 0;
}
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	2a 96       	adiw	r28, 0x0a	; 10
     e4c:	0f b6       	in	r0, 0x3f	; 63
     e4e:	f8 94       	cli
     e50:	de bf       	out	0x3e, r29	; 62
     e52:	0f be       	out	0x3f, r0	; 63
     e54:	cd bf       	out	0x3d, r28	; 61
     e56:	df 91       	pop	r29
     e58:	cf 91       	pop	r28
     e5a:	08 95       	ret

00000e5c <__divsf3>:
     e5c:	0c d0       	rcall	.+24     	; 0xe76 <__divsf3x>
     e5e:	ae c0       	rjmp	.+348    	; 0xfbc <__fp_round>
     e60:	a6 d0       	rcall	.+332    	; 0xfae <__fp_pscB>
     e62:	40 f0       	brcs	.+16     	; 0xe74 <__divsf3+0x18>
     e64:	9d d0       	rcall	.+314    	; 0xfa0 <__fp_pscA>
     e66:	30 f0       	brcs	.+12     	; 0xe74 <__divsf3+0x18>
     e68:	21 f4       	brne	.+8      	; 0xe72 <__divsf3+0x16>
     e6a:	5f 3f       	cpi	r21, 0xFF	; 255
     e6c:	19 f0       	breq	.+6      	; 0xe74 <__divsf3+0x18>
     e6e:	8f c0       	rjmp	.+286    	; 0xf8e <__fp_inf>
     e70:	51 11       	cpse	r21, r1
     e72:	d8 c0       	rjmp	.+432    	; 0x1024 <__fp_szero>
     e74:	92 c0       	rjmp	.+292    	; 0xf9a <__fp_nan>

00000e76 <__divsf3x>:
     e76:	b3 d0       	rcall	.+358    	; 0xfde <__fp_split3>
     e78:	98 f3       	brcs	.-26     	; 0xe60 <__divsf3+0x4>

00000e7a <__divsf3_pse>:
     e7a:	99 23       	and	r25, r25
     e7c:	c9 f3       	breq	.-14     	; 0xe70 <__divsf3+0x14>
     e7e:	55 23       	and	r21, r21
     e80:	b1 f3       	breq	.-20     	; 0xe6e <__divsf3+0x12>
     e82:	95 1b       	sub	r25, r21
     e84:	55 0b       	sbc	r21, r21
     e86:	bb 27       	eor	r27, r27
     e88:	aa 27       	eor	r26, r26
     e8a:	62 17       	cp	r22, r18
     e8c:	73 07       	cpc	r23, r19
     e8e:	84 07       	cpc	r24, r20
     e90:	38 f0       	brcs	.+14     	; 0xea0 <__divsf3_pse+0x26>
     e92:	9f 5f       	subi	r25, 0xFF	; 255
     e94:	5f 4f       	sbci	r21, 0xFF	; 255
     e96:	22 0f       	add	r18, r18
     e98:	33 1f       	adc	r19, r19
     e9a:	44 1f       	adc	r20, r20
     e9c:	aa 1f       	adc	r26, r26
     e9e:	a9 f3       	breq	.-22     	; 0xe8a <__divsf3_pse+0x10>
     ea0:	33 d0       	rcall	.+102    	; 0xf08 <__divsf3_pse+0x8e>
     ea2:	0e 2e       	mov	r0, r30
     ea4:	3a f0       	brmi	.+14     	; 0xeb4 <__divsf3_pse+0x3a>
     ea6:	e0 e8       	ldi	r30, 0x80	; 128
     ea8:	30 d0       	rcall	.+96     	; 0xf0a <__divsf3_pse+0x90>
     eaa:	91 50       	subi	r25, 0x01	; 1
     eac:	50 40       	sbci	r21, 0x00	; 0
     eae:	e6 95       	lsr	r30
     eb0:	00 1c       	adc	r0, r0
     eb2:	ca f7       	brpl	.-14     	; 0xea6 <__divsf3_pse+0x2c>
     eb4:	29 d0       	rcall	.+82     	; 0xf08 <__divsf3_pse+0x8e>
     eb6:	fe 2f       	mov	r31, r30
     eb8:	27 d0       	rcall	.+78     	; 0xf08 <__divsf3_pse+0x8e>
     eba:	66 0f       	add	r22, r22
     ebc:	77 1f       	adc	r23, r23
     ebe:	88 1f       	adc	r24, r24
     ec0:	bb 1f       	adc	r27, r27
     ec2:	26 17       	cp	r18, r22
     ec4:	37 07       	cpc	r19, r23
     ec6:	48 07       	cpc	r20, r24
     ec8:	ab 07       	cpc	r26, r27
     eca:	b0 e8       	ldi	r27, 0x80	; 128
     ecc:	09 f0       	breq	.+2      	; 0xed0 <__divsf3_pse+0x56>
     ece:	bb 0b       	sbc	r27, r27
     ed0:	80 2d       	mov	r24, r0
     ed2:	bf 01       	movw	r22, r30
     ed4:	ff 27       	eor	r31, r31
     ed6:	93 58       	subi	r25, 0x83	; 131
     ed8:	5f 4f       	sbci	r21, 0xFF	; 255
     eda:	2a f0       	brmi	.+10     	; 0xee6 <__divsf3_pse+0x6c>
     edc:	9e 3f       	cpi	r25, 0xFE	; 254
     ede:	51 05       	cpc	r21, r1
     ee0:	68 f0       	brcs	.+26     	; 0xefc <__divsf3_pse+0x82>
     ee2:	55 c0       	rjmp	.+170    	; 0xf8e <__fp_inf>
     ee4:	9f c0       	rjmp	.+318    	; 0x1024 <__fp_szero>
     ee6:	5f 3f       	cpi	r21, 0xFF	; 255
     ee8:	ec f3       	brlt	.-6      	; 0xee4 <__divsf3_pse+0x6a>
     eea:	98 3e       	cpi	r25, 0xE8	; 232
     eec:	dc f3       	brlt	.-10     	; 0xee4 <__divsf3_pse+0x6a>
     eee:	86 95       	lsr	r24
     ef0:	77 95       	ror	r23
     ef2:	67 95       	ror	r22
     ef4:	b7 95       	ror	r27
     ef6:	f7 95       	ror	r31
     ef8:	9f 5f       	subi	r25, 0xFF	; 255
     efa:	c9 f7       	brne	.-14     	; 0xeee <__divsf3_pse+0x74>
     efc:	88 0f       	add	r24, r24
     efe:	91 1d       	adc	r25, r1
     f00:	96 95       	lsr	r25
     f02:	87 95       	ror	r24
     f04:	97 f9       	bld	r25, 7
     f06:	08 95       	ret
     f08:	e1 e0       	ldi	r30, 0x01	; 1
     f0a:	66 0f       	add	r22, r22
     f0c:	77 1f       	adc	r23, r23
     f0e:	88 1f       	adc	r24, r24
     f10:	bb 1f       	adc	r27, r27
     f12:	62 17       	cp	r22, r18
     f14:	73 07       	cpc	r23, r19
     f16:	84 07       	cpc	r24, r20
     f18:	ba 07       	cpc	r27, r26
     f1a:	20 f0       	brcs	.+8      	; 0xf24 <__divsf3_pse+0xaa>
     f1c:	62 1b       	sub	r22, r18
     f1e:	73 0b       	sbc	r23, r19
     f20:	84 0b       	sbc	r24, r20
     f22:	ba 0b       	sbc	r27, r26
     f24:	ee 1f       	adc	r30, r30
     f26:	88 f7       	brcc	.-30     	; 0xf0a <__divsf3_pse+0x90>
     f28:	e0 95       	com	r30
     f2a:	08 95       	ret

00000f2c <__fixsfsi>:
     f2c:	04 d0       	rcall	.+8      	; 0xf36 <__fixunssfsi>
     f2e:	68 94       	set
     f30:	b1 11       	cpse	r27, r1
     f32:	78 c0       	rjmp	.+240    	; 0x1024 <__fp_szero>
     f34:	08 95       	ret

00000f36 <__fixunssfsi>:
     f36:	5b d0       	rcall	.+182    	; 0xfee <__fp_splitA>
     f38:	88 f0       	brcs	.+34     	; 0xf5c <__fixunssfsi+0x26>
     f3a:	9f 57       	subi	r25, 0x7F	; 127
     f3c:	90 f0       	brcs	.+36     	; 0xf62 <__fixunssfsi+0x2c>
     f3e:	b9 2f       	mov	r27, r25
     f40:	99 27       	eor	r25, r25
     f42:	b7 51       	subi	r27, 0x17	; 23
     f44:	a0 f0       	brcs	.+40     	; 0xf6e <__fixunssfsi+0x38>
     f46:	d1 f0       	breq	.+52     	; 0xf7c <__fixunssfsi+0x46>
     f48:	66 0f       	add	r22, r22
     f4a:	77 1f       	adc	r23, r23
     f4c:	88 1f       	adc	r24, r24
     f4e:	99 1f       	adc	r25, r25
     f50:	1a f0       	brmi	.+6      	; 0xf58 <__fixunssfsi+0x22>
     f52:	ba 95       	dec	r27
     f54:	c9 f7       	brne	.-14     	; 0xf48 <__fixunssfsi+0x12>
     f56:	12 c0       	rjmp	.+36     	; 0xf7c <__fixunssfsi+0x46>
     f58:	b1 30       	cpi	r27, 0x01	; 1
     f5a:	81 f0       	breq	.+32     	; 0xf7c <__fixunssfsi+0x46>
     f5c:	62 d0       	rcall	.+196    	; 0x1022 <__fp_zero>
     f5e:	b1 e0       	ldi	r27, 0x01	; 1
     f60:	08 95       	ret
     f62:	5f c0       	rjmp	.+190    	; 0x1022 <__fp_zero>
     f64:	67 2f       	mov	r22, r23
     f66:	78 2f       	mov	r23, r24
     f68:	88 27       	eor	r24, r24
     f6a:	b8 5f       	subi	r27, 0xF8	; 248
     f6c:	39 f0       	breq	.+14     	; 0xf7c <__fixunssfsi+0x46>
     f6e:	b9 3f       	cpi	r27, 0xF9	; 249
     f70:	cc f3       	brlt	.-14     	; 0xf64 <__fixunssfsi+0x2e>
     f72:	86 95       	lsr	r24
     f74:	77 95       	ror	r23
     f76:	67 95       	ror	r22
     f78:	b3 95       	inc	r27
     f7a:	d9 f7       	brne	.-10     	; 0xf72 <__fixunssfsi+0x3c>
     f7c:	3e f4       	brtc	.+14     	; 0xf8c <__fixunssfsi+0x56>
     f7e:	90 95       	com	r25
     f80:	80 95       	com	r24
     f82:	70 95       	com	r23
     f84:	61 95       	neg	r22
     f86:	7f 4f       	sbci	r23, 0xFF	; 255
     f88:	8f 4f       	sbci	r24, 0xFF	; 255
     f8a:	9f 4f       	sbci	r25, 0xFF	; 255
     f8c:	08 95       	ret

00000f8e <__fp_inf>:
     f8e:	97 f9       	bld	r25, 7
     f90:	9f 67       	ori	r25, 0x7F	; 127
     f92:	80 e8       	ldi	r24, 0x80	; 128
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	60 e0       	ldi	r22, 0x00	; 0
     f98:	08 95       	ret

00000f9a <__fp_nan>:
     f9a:	9f ef       	ldi	r25, 0xFF	; 255
     f9c:	80 ec       	ldi	r24, 0xC0	; 192
     f9e:	08 95       	ret

00000fa0 <__fp_pscA>:
     fa0:	00 24       	eor	r0, r0
     fa2:	0a 94       	dec	r0
     fa4:	16 16       	cp	r1, r22
     fa6:	17 06       	cpc	r1, r23
     fa8:	18 06       	cpc	r1, r24
     faa:	09 06       	cpc	r0, r25
     fac:	08 95       	ret

00000fae <__fp_pscB>:
     fae:	00 24       	eor	r0, r0
     fb0:	0a 94       	dec	r0
     fb2:	12 16       	cp	r1, r18
     fb4:	13 06       	cpc	r1, r19
     fb6:	14 06       	cpc	r1, r20
     fb8:	05 06       	cpc	r0, r21
     fba:	08 95       	ret

00000fbc <__fp_round>:
     fbc:	09 2e       	mov	r0, r25
     fbe:	03 94       	inc	r0
     fc0:	00 0c       	add	r0, r0
     fc2:	11 f4       	brne	.+4      	; 0xfc8 <__fp_round+0xc>
     fc4:	88 23       	and	r24, r24
     fc6:	52 f0       	brmi	.+20     	; 0xfdc <__fp_round+0x20>
     fc8:	bb 0f       	add	r27, r27
     fca:	40 f4       	brcc	.+16     	; 0xfdc <__fp_round+0x20>
     fcc:	bf 2b       	or	r27, r31
     fce:	11 f4       	brne	.+4      	; 0xfd4 <__fp_round+0x18>
     fd0:	60 ff       	sbrs	r22, 0
     fd2:	04 c0       	rjmp	.+8      	; 0xfdc <__fp_round+0x20>
     fd4:	6f 5f       	subi	r22, 0xFF	; 255
     fd6:	7f 4f       	sbci	r23, 0xFF	; 255
     fd8:	8f 4f       	sbci	r24, 0xFF	; 255
     fda:	9f 4f       	sbci	r25, 0xFF	; 255
     fdc:	08 95       	ret

00000fde <__fp_split3>:
     fde:	57 fd       	sbrc	r21, 7
     fe0:	90 58       	subi	r25, 0x80	; 128
     fe2:	44 0f       	add	r20, r20
     fe4:	55 1f       	adc	r21, r21
     fe6:	59 f0       	breq	.+22     	; 0xffe <__fp_splitA+0x10>
     fe8:	5f 3f       	cpi	r21, 0xFF	; 255
     fea:	71 f0       	breq	.+28     	; 0x1008 <__fp_splitA+0x1a>
     fec:	47 95       	ror	r20

00000fee <__fp_splitA>:
     fee:	88 0f       	add	r24, r24
     ff0:	97 fb       	bst	r25, 7
     ff2:	99 1f       	adc	r25, r25
     ff4:	61 f0       	breq	.+24     	; 0x100e <__fp_splitA+0x20>
     ff6:	9f 3f       	cpi	r25, 0xFF	; 255
     ff8:	79 f0       	breq	.+30     	; 0x1018 <__fp_splitA+0x2a>
     ffa:	87 95       	ror	r24
     ffc:	08 95       	ret
     ffe:	12 16       	cp	r1, r18
    1000:	13 06       	cpc	r1, r19
    1002:	14 06       	cpc	r1, r20
    1004:	55 1f       	adc	r21, r21
    1006:	f2 cf       	rjmp	.-28     	; 0xfec <__fp_split3+0xe>
    1008:	46 95       	lsr	r20
    100a:	f1 df       	rcall	.-30     	; 0xfee <__fp_splitA>
    100c:	08 c0       	rjmp	.+16     	; 0x101e <__fp_splitA+0x30>
    100e:	16 16       	cp	r1, r22
    1010:	17 06       	cpc	r1, r23
    1012:	18 06       	cpc	r1, r24
    1014:	99 1f       	adc	r25, r25
    1016:	f1 cf       	rjmp	.-30     	; 0xffa <__fp_splitA+0xc>
    1018:	86 95       	lsr	r24
    101a:	71 05       	cpc	r23, r1
    101c:	61 05       	cpc	r22, r1
    101e:	08 94       	sec
    1020:	08 95       	ret

00001022 <__fp_zero>:
    1022:	e8 94       	clt

00001024 <__fp_szero>:
    1024:	bb 27       	eor	r27, r27
    1026:	66 27       	eor	r22, r22
    1028:	77 27       	eor	r23, r23
    102a:	cb 01       	movw	r24, r22
    102c:	97 f9       	bld	r25, 7
    102e:	08 95       	ret

00001030 <_exit>:
    1030:	f8 94       	cli

00001032 <__stop_program>:
    1032:	ff cf       	rjmp	.-2      	; 0x1032 <__stop_program>
